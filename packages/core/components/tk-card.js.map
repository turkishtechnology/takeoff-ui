{"file":"tk-card.js","mappings":"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","names":["TkCard","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-card/tk-card.scss?tag=tk-card&encapsulation=shadow","src/components/tk-card/tk-card.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.tk-card {\n  display: flex;\n  background: var(--static-light);\n  border-radius: 16px;\n  border: 1px solid var(--border-light);\n  box-shadow: var(--effect-1-default-base);\n\n  &.has-hover-shadow {\n    &:hover {\n      box-shadow: var(--effect-1-hover-base);\n    }\n  }\n\n  &.tk-card-vertical {\n    flex-direction: column;\n  }\n\n  &.tk-card-horizontal {\n    flex-direction: row;\n    align-items: stretch;\n\n    &:has(.tk-card-image-top) {\n      flex-direction: column;\n      justify-content: stretch;\n    }\n\n    .tk-card-horizontal-has-image-container {\n      display: flex;\n      flex-direction: column;\n      flex: 1 0 0;\n      align-self: stretch;\n    }\n\n    .tk-card-image {\n      &:not(.tk-card-windowed-image) {\n        &.tk-card-image-left img {\n          border-radius: 8px 0 0 8px;\n        }\n\n        &.tk-card-image-right img {\n          border-radius: 0 8px 8px 0;\n        }\n      }\n    }\n  }\n\n  .tk-card-header {\n    display: flex;\n    padding: var(--card-header-base-v-padding, 12px) var(--card-header-base-h-padding, 16px);\n    justify-content: space-between;\n    align-items: center;\n    align-self: stretch;\n\n    .tk-card-header-content {\n      display: flex;\n      align-items: center;\n      gap: var(--dialog-header-base-gap);\n\n      .tk-card-title-container {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .tk-card-title {\n          color: var(--text-darkest);\n          font-family: var(--desktop-title-h6-font, Geologica);\n          font-size: var(--desktop-title-h6-size, 20px);\n          font-weight: 400;\n          line-height: var(--desktop-title-h6-line-height);\n        }\n\n        .tk-card-subtitle {\n          color: var(--text-base);\n          font-family: var(--desktop-subheading-2xs-font, Geologica);\n          font-size: var(--desktop-subheading-2xs-size, 11px);\n          font-weight: 400;\n          line-height: var(--desktop-subheading-2xs-line-height, 16px);\n        }\n      }\n    }\n\n    &.tk-card-header-top:not(.tk-card-horizontal .tk-card-horizontal-has-image-container .tk-card-header) {\n      border-radius: 8px 8px 0 0;\n\n      &.tk-card-header-divided,\n      &.tk-card-header-light {\n        border-bottom: var(--spacing-px) solid var(--border-light);\n      }\n\n      &.tk-card-header-light {\n        background: var(--background-lightest);\n        border-top-left-radius: var(--radius-xl);\n        border-top-right-radius: var(--radius-xl);\n      }\n\n      &.tk-card-header-dark {\n        background: var(--background-darkest);\n\n        .tk-card-title-container {\n          .tk-card-subtitle {\n            color: var(--text-sub-base);\n          }\n\n          .tk-card-title {\n            color: var(--text-lightest);\n          }\n        }\n\n        .tk-card-header-menu-button {\n          color: var(--icon-base);\n        }\n      }\n\n      &.tk-card-header-primary {\n        background: var(--primary-base);\n\n        .tk-card-title-container {\n          .tk-card-subtitle {\n            color: var(--primary-lightest);\n          }\n\n          .tk-card-title {\n            color: var(--text-lightest);\n          }\n        }\n\n        .tk-card-header-menu-button {\n          color: var(--primary-lightest);\n        }\n      }\n    }\n  }\n\n  .tk-card-image {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    align-self: stretch;\n\n    &.tk-card-windowed-image {\n      padding: var(--card-image-windowed-v-padding, 16px) var(--card-image-windowed-h-padding, 16px);\n\n      img {\n        border-radius: 8px;\n      }\n    }\n\n    img {\n      width: 100%;\n      height: 100%;\n      flex: 1 0 0;\n      align-self: stretch;\n    }\n  }\n\n  .tk-card-content {\n    display: flex;\n    flex-direction: column;\n    align-self: stretch;\n    padding: var(--card-body-relaxed-v-padding, 16px) var(--card-body-relaxed-h-padding, 16px);\n    color: var(--text-base, #717784);\n    gap: 8px;\n  }\n\n  .tk-card-footer {\n    display: flex;\n    padding: var(--card-footer-base-v-padding, 16px) var(--card-footer-base-h-padding, 16px);\n    justify-content: flex-end;\n    align-self: stretch;\n\n    ::slotted([slot='footer-actions']) {\n      display: flex;\n      align-items: center;\n      gap: var(--dialog-footer-base-gap);\n    }\n\n    &:not(.tk-card-horizontal .tk-card-footer) {\n      &.tk-card-footer-divided,\n      &.tk-card-footer-light {\n        border-top: var(--spacing-px, 1px) solid var(--border-light, #e1e4ea);\n      }\n\n      &.tk-card-footer-light {\n        background: var(--background-lightest, #f9fafc);\n        border-bottom-left-radius: var(--radius-xl);\n        border-bottom-right-radius: var(--radius-xl);\n      }\n    }\n  }\n\n  &.tk-card-image-background {\n    .tk-card-header .tk-card-header-content .tk-card-title-container {\n      .tk-card-subtitle {\n        color: var(--text-light, #e1e4ea);\n      }\n\n      .tk-card-title {\n        color: var(--text-lightest, #f9fafc);\n      }\n    }\n\n    .tk-card-content {\n      color: var(--text-light, #e1e4ea);\n    }\n  }\n}\n","import { Component, ComponentInterface, Element, Fragment, Prop, State, h } from '@stencil/core';\nimport classNames from 'classnames';\n\n/**\n * TkCard component description.\n * @slot default - Default slot to detect child to inner body.\n * @slot header - Custom header template.\n * @slot avatar - Custom avatar template of card header.\n * @slot content - Custom content template.\n * @slot footer - Custom footer template.\n * @slot footer-actions - Custom actions template to default footer.\n * @react `import { TkCard } from '@takeoff-ui/react'`\n * @vue `import { TkCard } from '@takeoff-ui/vue'`\n * @angular `import { TkCard } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-card',\n  styleUrl: 'tk-card.scss',\n  shadow: true,\n})\nexport class TkCard implements ComponentInterface {\n  @Element() el: HTMLTkCardElement;\n\n  @State() hasHeaderSlot: boolean;\n  @State() hasAvatarSlot: boolean;\n  @State() hasContentSlot: boolean;\n  @State() hasFooterSlot: boolean;\n  @State() hasFooterActionsSlot: boolean;\n  @State() hasDefaultSlotBody: boolean;\n\n  /**\n   * TO DO\n   * Options for the image display\n   * @defaultValue { position: 'top', background: false, windowed: false }\n   */\n  @Prop() imageOptions: {\n    badge?: string;\n    badgeIcon?: string;\n    badgeIconPosition?: 'left' | 'right';\n    windowed?: boolean;\n    background?: boolean;\n    backgroundUrl?: string;\n    position?: 'top' | 'left' | 'right' | 'background';\n  } = {\n    position: 'top',\n    background: false,\n    windowed: true,\n  };\n\n  /**\n   * Controls whether the header avatar is shown\n   * @defaultValue false\n   */\n  @Prop() showAvatar: boolean = false;\n\n  /**\n   * TO DO State hata verdiği için buraya alındı, düzeltilecek\n   * TkAvatar component properties\n   * @defaultValue { severity: 'light', background: 'solid', rounded: true }\n   */\n  @Prop() avatarProps: any = {\n    severity: 'light',\n    background: 'solid',\n    rounded: true,\n  };\n\n  /**\n   * Controls whether the header is hidden\n   * @defaultValue false\n   */\n  @Prop() hideHeader: boolean = false;\n\n  /**\n   * Controls whether the menu button is shown\n   * @defaultValue false\n   */\n  @Prop() showMenuButton: boolean = false;\n\n  /**\n   * The image source for the card\n   * @defaultValue null\n   */\n  @Prop() image: string = null;\n\n  /**\n   * The position of the header\n   * @defaultValue 'top'\n   */\n  @Prop() headerPosition: 'top' | 'bottom' = 'top';\n\n  /**\n   * The header text\n   */\n  @Prop() header: string;\n\n  /**\n   * The subheader text\n   */\n  @Prop() subheader: string;\n\n  /**\n   * The type of the header\n   * @defaultValue 'basic'\n   */\n  @Prop() headerType: 'basic' | 'divided' | 'light' | 'dark' | 'primary' = 'basic';\n\n  /**\n   * Controls whether the card is displayed horizontally\n   * @defaultValue false\n   */\n  @Prop() horizontal: boolean = false;\n\n  /**\n   * The mode of the footer\n   * @defaultValue 'basic'\n   */\n  @Prop() footerType: 'basic' | 'divided' | 'light' = 'basic';\n\n  /**\n   * Controls whether the card shows a hover shadow effect\n   * @defaultValue false\n   */\n  @Prop() enableHoverShadow: boolean = false;\n\n  /**\n   * The style attribute of container element\n   */\n  @Prop() containerStyle?: any = null;\n\n  /**\n   * The style attribute of content element\n   */\n  @Prop() contentStyle?: any = null;\n\n  componentWillLoad() {\n    this.hasHeaderSlot = !!this.el.querySelector(':scope > [slot=\"header\"]');\n    this.hasAvatarSlot = !!this.el.querySelector(':scope > [slot=\"avatar\"]');\n    this.hasContentSlot = !!this.el.querySelector(':scope > [slot=\"content\"]');\n    this.hasFooterSlot = !!this.el.querySelector(':scope > [slot=\"footer\"]');\n    this.hasFooterActionsSlot = !!this.el.querySelector(':scope > [slot=\"footer-actions\"]');\n    this.hasDefaultSlotBody = Array.from(this.el.childNodes).some(node => {\n      return node.nodeType === Node.ELEMENT_NODE && !(node as HTMLElement).hasAttribute('slot');\n    });\n  }\n\n  private createHeader() {\n    if (this.hideHeader) return null;\n    if (this.hasHeaderSlot) {\n      return <slot name=\"header\"></slot>;\n    } else {\n      if (!this.header) return null;\n      return (\n        <div\n          class={classNames('tk-card-header', `tk-card-header-${this.headerPosition}`, {\n            [`tk-card-header-${this.headerType}`]: !this.imageOptions.background,\n          })}\n        >\n          <div class=\"tk-card-header-content\">\n            {this.hasAvatarSlot ? (\n              <slot name=\"avatar\"></slot>\n            ) : (\n              <Fragment>\n                {this.showAvatar && (\n                  <div class=\"tk-card-avatar\">\n                    {' '}\n                    <tk-avatar {...this.avatarProps}></tk-avatar>\n                  </div>\n                )}\n              </Fragment>\n            )}\n            <div class=\"tk-card-title-container\">\n              {this.subheader && <span class=\"tk-card-subtitle\">{this.subheader}</span>}\n              {this.header && <span class=\"tk-card-title\">{this.header}</span>}\n            </div>\n          </div>\n          {this.showMenuButton && <tk-button variant=\"neutral\" icon=\"more_vert\" size=\"base\" type=\"text\" aria-label=\"TkCard Header Menu Button\"></tk-button>}\n        </div>\n      );\n    }\n  }\n\n  private createImage() {\n    if (!this.image || this.imageOptions.background) return null;\n    const imageClasses = classNames('tk-card-image', `tk-card-image-${this.imageOptions.position}`, { 'tk-card-windowed-image': this.imageOptions.windowed });\n    return (\n      <div class={imageClasses}>\n        <img src={this.image} alt=\"Card image\" />\n        {/* {this.imageOptions.badge && (\n          TODO: Add Badge\n        )} */}\n      </div>\n    );\n  }\n\n  private createContent() {\n    if (this.hasContentSlot) {\n      return <slot name=\"content\"></slot>;\n    } else if (this.hasDefaultSlotBody) {\n      return (\n        <div class=\"tk-card-content\" style={this.contentStyle}>\n          <slot></slot>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private createFooter() {\n    if (this.hasFooterSlot) {\n      return <slot name=\"footer\"></slot>;\n    } else if (this.hasFooterActionsSlot) {\n      return (\n        <div\n          class={classNames('tk-card-footer', {\n            [`tk-card-footer-${this.footerType}`]: !this.imageOptions.background,\n          })}\n        >\n          <slot name=\"footer-actions\"></slot>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private renderCardContent() {\n    const header = this.createHeader();\n    const image = this.createImage();\n    const content = this.createContent();\n    const footer = this.createFooter();\n    const imageOption = this.imageOptions.position;\n\n    if (imageOption === 'top') {\n      return (\n        <Fragment>\n          {this.headerPosition === 'top' && header}\n          {image}\n          {this.headerPosition === 'bottom' && header}\n          {content}\n          {footer}\n        </Fragment>\n      );\n    } else if (this.horizontal && (imageOption === 'left' || imageOption === 'right')) {\n      return (\n        <Fragment>\n          {imageOption === 'left' && image}\n          <div class=\"tk-card-horizontal-has-image-container\">\n            {header}\n            {content}\n            {footer}\n          </div>\n          {imageOption === 'right' && image}\n        </Fragment>\n      );\n    }\n  }\n\n  render() {\n    const rootClasses = classNames('tk-card', {\n      'tk-card-vertical': !this.horizontal,\n      'tk-card-horizontal': this.horizontal,\n      'tk-card-image-background': this.imageOptions.background,\n      'has-hover-shadow': this.enableHoverShadow,\n    });\n\n    const rootProps = {\n      class: rootClasses,\n      style: {\n        ...(this.imageOptions.backgroundUrl && { background: `url(${this.imageOptions.backgroundUrl})` }),\n        ...this.containerStyle,\n      },\n    };\n    return <div {...rootProps}>{this.renderCardContent()}</div>;\n  }\n}\n"],"version":3}