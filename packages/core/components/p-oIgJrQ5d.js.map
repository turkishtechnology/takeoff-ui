{"file":"p-oIgJrQ5d.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-pagination/tk-pagination.scss?tag=tk-pagination","src/components/tk-pagination/tk-pagination.tsx"],"sourcesContent":["tk-pagination {\n  display: block;\n}\n\n.tk-pagination-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n\n  .tk-pagination-start {\n    margin-right: auto;\n  }\n\n  .tk-pagination-end {\n    margin-left: auto;\n    display: flex;\n    gap: var(--pagination-base-right-gap, 12px);\n  }\n\n  .tk-pagination-tag {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: var(--pagination-base-tag-gap, 0px);\n\n    .tk-pagination-tag-label {\n      color: var(--text-base, #717784);\n      /* Body/X-Small-12 */\n      font-family: var(--desktop-body-xs-font, Geologica);\n      font-size: var(--desktop-body-xs-size, 12px);\n      font-style: normal;\n      font-weight: 400;\n      line-height: var(--desktop-body-xs-line-height, 18px);\n      /* 150% */\n    }\n  }\n\n  .tk-pagination {\n    display: flex;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: var(--pagination-base-gap, 6px);\n\n    .tk-pagination-prev-actions,\n    .tk-pagination-next-actions {\n      display: flex;\n      align-items: center;\n      gap: var(--pagination-base-arrow-gap, 4px);\n    }\n\n    .tk-pagination-cell {\n      display: flex;\n      min-width: 32px;\n      height: 32px;\n      // The numbers in the design do not match exactly; 8px and 12px actually correspond to 6px and 11px\n      padding: 6px 11px;\n      justify-content: center;\n      align-items: center;\n      border-radius: 8px;\n      background: none;\n      border: none;\n      cursor: pointer;\n      color: var(--text-darkest, #222530);\n      /* Body/Small-14 */\n      font-family: var(--desktop-body-s-font);\n      font-size: var(--desktop-body-s-size, 14px);\n      font-style: normal;\n      font-weight: 400;\n      line-height: var(--desktop-body-s-line-height, 20px); /* 142.857% */\n      .tk-pagination-page-label {\n        color: var(--text-darkest);\n      }\n\n      .tk-pagination-cell-icon i {\n        font-size: 20px;\n        width: 20px;\n        height: 20px;\n        color: var(--icon-base);\n      }\n\n      &:hover:not(:disabled):not(.tk-pagination-ellipsis) {\n        background: var(--background-lightest, #f9fafc);\n      }\n\n      &:focus-visible {\n        border: var(--spacing-px, 1px) solid var(--states-info-base, #3b82f6);\n      }\n\n      &:disabled {\n        .tk-pagination-page-label,\n        .tk-pagination-cell-icon i {\n          color: var(--text-sub-base, #99a0ae);\n        }\n      }\n    }\n\n    &.tk-pagination-rounded {\n      &:not(.tk-pagination-compact-expanded) {\n        .tk-pagination-page {\n          border-radius: var(--radius-full);\n        }\n      }\n    }\n\n    &.tk-pagination-outlined {\n      .tk-pagination-page {\n        border: var(--spacing-px, 1px) solid var(--border-light, #e1e4ea);\n      }\n    }\n\n    &.tk-pagination-grouped {\n      display: inline-flex;\n      align-items: center;\n      padding: var(--pagination-base-container-v-padding, 2px) 0px;\n      border-radius: 8px;\n      border: var(--spacing-px, 1px) solid var(--border-light, #e1e4ea);\n      background: var(--static-light, #fff);\n      overflow: hidden;\n\n      .tk-pagination-divider {\n        width: 1px;\n        height: 16px;\n        background-color: var(--border-light, #e1e4ea);\n      }\n    }\n\n    &.tk-pagination-compact {\n      .tk-pagination-cell {\n        width: 36px;\n        height: 36px;\n      }\n\n      .tk-pagination-current-label {\n        color: var(--text-base, #717784);\n\n        /* Body/Small-14 */\n        font-family: var(--desktop-body-s-font, Geologica);\n        font-size: var(--desktop-body-s-size, 14px);\n        font-style: normal;\n        font-weight: 400;\n        line-height: var(--desktop-body-s-line-height, 20px);\n        /* 142.857% */\n      }\n\n      .tk-pagination-first,\n      .tk-pagination-prev,\n      .tk-pagination-next,\n      .tk-pagination-last {\n        border: var(--spacing-px, 1px) solid var(--border-light, #e1e4ea);\n      }\n\n      &.tk-pagination-rounded {\n        .tk-pagination-first,\n        .tk-pagination-prev,\n        .tk-pagination-next,\n        .tk-pagination-last {\n          border-radius: var(--radius-full);\n        }\n      }\n\n      tk-input {\n        width: 48px;\n        height: 40px;\n      }\n    }\n\n    .tk-pagination-page {\n      &.tk-pagination-page-active {\n        border: var(--spacing-px, 1px) solid var(--states-info-sub-base);\n        background: var(--background-lightest, #f9fafc);\n      }\n    }\n\n    .tk-pagination-last,\n    .tk-pagination-prev,\n    .tk-pagination-page,\n    .tk-pagination-next,\n    .tk-pagination-first {\n      &:focus-visible {\n        border: var(--spacing-px, 1px) solid var(--states-info-base, #3b82f6);\n        outline: none;\n      }\n    }\n  }\n}\n\n@media (max-width: 600px) {\n  .tk-pagination-container {\n    display: grid;\n    gap: 8px;\n    grid-template-columns: 1fr;\n\n    .tk-pagination-start {\n      display: none;\n    }\n\n    .tk-pagination,\n    .tk-pagination-end {\n      width: 100%;\n      justify-content: center;\n    }\n  }\n}\n","import { Component, ComponentInterface, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\nimport classNames from 'classnames';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * TkPagination component description.\n * @react `import { TkPagination } from '@takeoff-ui/react'`\n * @vue `import { TkPagination } from '@takeoff-ui/vue'`\n * @angular `import { TkPagination } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-pagination',\n  styleUrl: 'tk-pagination.scss',\n})\nexport class TkPagination implements ComponentInterface {\n  private ellipsis = '...';\n\n  @State() inputValue: string;\n  @State() internalCurrentPage: number = 1;\n  @Watch('internalCurrentPage')\n  internalCurrentPageChanged(newValue: number) {\n    this.currentPage = newValue;\n    this.updateInputValue(newValue);\n    this.emitPageChangeEvents();\n  }\n\n  /**\n   * Whether the pagination elements should have rounded corners\n   * @defaultValue false\n   */\n  @Prop() rounded: boolean = false;\n\n  /**\n   * Number of items per page.\n   * @defaultValue 10\n   */\n  @Prop({ mutable: true }) rowsPerPage: number = 10;\n\n  /**\n   * Number of total items.\n   * @defaultValue 0\n   */\n  @Prop() totalItems: number = 0;\n\n  /**\n   * Number of items per page options\n   * @defaultValue [5, 10, 20, 50]\n   */\n  @Prop() rowsPerPageOptions: number[] = [5, 10, 20, 50];\n\n  /**\n   * The type of the pagination\n   * @defaultValue 'outlined'\n   */\n  @Prop() type: 'outlined' | 'text' | 'grouped' = 'outlined';\n\n  /**\n   * The mode of the pagination\n   * @defaultValue 'outlined'\n   */\n  @Prop() mode: 'compact' | 'compact-expanded';\n\n  /**\n   * The current page of the pagination.\n   * @defaultValue 1\n   */\n  @Prop() currentPage: number = 1;\n  @Watch('currentPage')\n  currentPageChanged(newValue: number) {\n    this.internalCurrentPage = newValue;\n    this.updateInputValue(newValue);\n  }\n\n  /**\n   * Pagination next button click event\n   */\n  @Event({ eventName: 'tk-next-page' }) tkNextPage: EventEmitter<{ page: number }>;\n\n  /**\n   * Pagination page change event\n   */\n  @Event({ eventName: 'tk-page-change' }) tkPageChange: EventEmitter<{ page: number; totalPages: number; startItem: number; endItem: number }>;\n\n  /**\n   * Pagination prev button click event\n   */\n  @Event({ eventName: 'tk-prev-page' }) tkPrevPage: EventEmitter<{ page: number }>;\n\n  /**\n   * RowsPerPage change event\n   */\n  @Event({ eventName: 'tk-rows-per-page-change' }) tkRowsPerPageChange: EventEmitter<number>;\n\n  componentWillLoad() {\n    this.internalCurrentPage = this.currentPage;\n    this.updateInputValue(this.currentPage);\n  }\n\n  private updateInputValue(value: number) {\n    this.inputValue = value.toString();\n  }\n\n  private getTotalPages(): number {\n    return Math.ceil(this.totalItems / this.rowsPerPage);\n  }\n\n  private getPageNumbers(): (number | string)[] {\n    const totalPages = this.getTotalPages();\n    const currentPage = this.internalCurrentPage;\n    const pageNumbers: (number | string)[] = [];\n\n    if (totalPages <= 5) {\n      for (let i = 1; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else if (totalPages <= 7) {\n      this.generatePageNumbersForMediumRange(pageNumbers, currentPage, totalPages);\n    } else {\n      this.generatePageNumbersForLargeRange(pageNumbers, currentPage, totalPages);\n    }\n    return pageNumbers;\n  }\n\n  private generatePageNumbersForMediumRange(pageNumbers: (number | string)[], currentPage: number, totalPages: number) {\n    pageNumbers.push(1);\n    if (currentPage <= 3) {\n      for (let i = 2; i <= 5; i++) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push(this.ellipsis);\n    } else if (currentPage >= totalPages - 2) {\n      pageNumbers.push(this.ellipsis);\n      for (let i = totalPages - 4; i < totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(this.ellipsis);\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push(this.ellipsis);\n    }\n    pageNumbers.push(totalPages);\n  }\n\n  private generatePageNumbersForLargeRange(pageNumbers: (number | string)[], currentPage: number, totalPages: number) {\n    pageNumbers.push(1);\n    if (currentPage <= 4) {\n      for (let i = 2; i <= 5; i++) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push(this.ellipsis, totalPages);\n    } else if (currentPage >= totalPages - 3) {\n      pageNumbers.push(this.ellipsis);\n      for (let i = totalPages - 4; i <= totalPages; i++) {\n        pageNumbers.push(i);\n      }\n    } else {\n      pageNumbers.push(this.ellipsis);\n      for (let i = currentPage - 2; i <= currentPage + 2; i++) {\n        pageNumbers.push(i);\n      }\n      pageNumbers.push(this.ellipsis, totalPages);\n    }\n  }\n\n  private validateAndUpdatePage() {\n    const pageNumber = parseInt(this.inputValue, 10);\n    const totalPages = this.getTotalPages();\n    if (!isNaN(pageNumber) && pageNumber >= 1 && pageNumber <= totalPages) {\n      this.handlePageClick(pageNumber);\n    } else {\n      this.updateInputValue(this.internalCurrentPage);\n    }\n  }\n\n  private emitPageChangeEvents() {\n    const totalPages = this.getTotalPages();\n    const startItem = (this.internalCurrentPage - 1) * this.rowsPerPage + 1;\n    const endItem = Math.min(this.internalCurrentPage * this.rowsPerPage, this.totalItems);\n    this.tkPageChange.emit({\n      page: this.internalCurrentPage,\n      totalPages,\n      startItem,\n      endItem,\n    });\n  }\n\n  private handlePageClick = (page: number) => {\n    if (page >= 1 && page <= this.getTotalPages()) {\n      this.internalCurrentPage = page;\n    }\n  };\n\n  private handlePrevClick = () => {\n    if (this.internalCurrentPage > 1) {\n      this.internalCurrentPage--;\n      this.tkPrevPage.emit({ page: this.internalCurrentPage });\n    }\n  };\n\n  private handleNextClick = () => {\n    if (this.internalCurrentPage < this.getTotalPages()) {\n      this.internalCurrentPage++;\n      this.tkNextPage.emit({ page: this.internalCurrentPage });\n    }\n  };\n\n  private handlePageInputChange(value: string) {\n    this.inputValue = value.replace(/[^0-9]/g, '');\n  }\n\n  private createPageNumbers() {\n    return this.getPageNumbers().map(pageNumber => {\n      if (pageNumber === this.ellipsis) {\n        return <span class=\"tk-pagination-ellipsis tk-pagination-cell\">...</span>;\n      }\n\n      return (\n        <button\n          class={classNames('tk-pagination-cell tk-pagination-page', { 'tk-pagination-page-active': pageNumber === this.internalCurrentPage })}\n          type=\"button\"\n          onClick={() => this.handlePageClick(pageNumber as number)}\n        >\n          <span class=\"tk-pagination-page-label\">{pageNumber}</span>\n        </button>\n      );\n    });\n  }\n\n  private renderTag(totalPages: number) {\n    if (this.mode !== 'compact') {\n      const startItem = (this.internalCurrentPage - 1) * this.rowsPerPage + 1;\n      const endItem = Math.min(this.internalCurrentPage * this.rowsPerPage, this.totalItems);\n      let tagContent: HTMLElement;\n\n      if (this.mode === 'compact-expanded') {\n        tagContent = (\n          <span class=\"tk-pagination-tag-label\">\n            {startItem}-{endItem} of {this.totalItems}\n          </span>\n        );\n      } else {\n        tagContent = totalPages > 0 && (\n          <Fragment>\n            <span class=\"tk-pagination-tag-label\">\n              page: {this.internalCurrentPage} of {totalPages}\n            </span>\n            <span class=\"tk-pagination-tag-label\">\n              item: {startItem}-{endItem} of {this.totalItems}\n            </span>\n          </Fragment>\n        );\n      }\n\n      return <div class=\"tk-pagination-tag\">{tagContent}</div>;\n    }\n\n    return null;\n  }\n\n  private renderContent(totalPages: number) {\n    const ContentWrapperTag = this.mode === 'compact' || this.mode === 'compact-expanded' ? 'div' : 'nav';\n    const contentClasses = classNames('tk-pagination', `tk-pagination-${this.mode || this.type}`, {\n      'tk-pagination-rounded': this.rounded,\n    });\n    let content: HTMLElement;\n\n    if (this.mode === 'compact') {\n      content = (\n        <Fragment>\n          <button class=\"tk-pagination-cell tk-pagination-prev\" type=\"button\" onClick={this.handlePrevClick} disabled={this.internalCurrentPage === 1}>\n            <tk-icon {...getIconElementProps('chevron_left', { class: 'tk-pagination-cell-icon', variant: null })} />\n          </button>\n          <tk-input\n            mode=\"text\"\n            value={this.inputValue}\n            onTk-change={(event: CustomEvent) => this.handlePageInputChange(event.detail.toString())}\n            onTk-blur={() => this.validateAndUpdatePage()}\n            min={1}\n            max={totalPages}\n          />\n          <span class=\"tk-pagination-current-label\">/ {totalPages} pages</span>\n          <button class=\"tk-pagination-cell tk-pagination-next\" type=\"button\" onClick={this.handleNextClick} disabled={this.internalCurrentPage === totalPages}>\n            <tk-icon {...getIconElementProps('chevron_right', { class: 'tk-pagination-cell-icon', variant: null })} />\n          </button>\n        </Fragment>\n      );\n    }\n    // else if(this.type === 'compact-expanded') {\n    //   @TODO: Add pagination content for compact-expanded after the tk-dropdown component is completed\n    //   content =\n    // }\n    else {\n      content = (\n        <Fragment>\n          <div class=\"tk-pagination-prev-actions\">\n            <button class=\"tk-pagination-cell tk-pagination-first\" type=\"button\" onClick={() => this.handlePageClick(1)} disabled={this.internalCurrentPage === 1}>\n              <tk-icon {...getIconElementProps('keyboard_double_arrow_left', { class: 'tk-pagination-cell-icon', variant: null })} />\n            </button>\n            {this.type === 'grouped' && <span class=\"tk-pagination-divider\"></span>}\n            <button class=\"tk-pagination-cell tk-pagination-prev\" type=\"button\" onClick={this.handlePrevClick} disabled={this.internalCurrentPage === 1}>\n              <tk-icon {...getIconElementProps('chevron_left', { class: 'tk-pagination-cell-icon', variant: null })} />{' '}\n            </button>\n          </div>\n          {this.createPageNumbers()}\n          <div class=\"tk-pagination-next-actions\">\n            <button class=\"tk-pagination-cell tk-pagination-next\" type=\"button\" onClick={this.handleNextClick} disabled={this.internalCurrentPage === totalPages}>\n              <tk-icon {...getIconElementProps('chevron_right', { class: 'tk-pagination-cell-icon', variant: null })} />\n            </button>\n            {this.type === 'grouped' && <span class=\"tk-pagination-divider\"></span>}\n            <button class=\"tk-pagination-cell tk-pagination-last\" type=\"button\" onClick={() => this.handlePageClick(totalPages)} disabled={this.internalCurrentPage === totalPages}>\n              <tk-icon {...getIconElementProps('keyboard_double_arrow_right', { class: 'tk-pagination-cell-icon', variant: null })} />\n            </button>\n          </div>\n        </Fragment>\n      );\n    }\n\n    return <ContentWrapperTag class={contentClasses}>{content}</ContentWrapperTag>;\n  }\n\n  private renderSelect(): HTMLTkSelectElement {\n    return (\n      <tk-select\n        style={{ width: '75px' }}\n        value={this.rowsPerPage}\n        options={this.rowsPerPageOptions}\n        onTk-change={e => {\n          if (e.detail !== this.rowsPerPage) {\n            this.rowsPerPage = e.detail;\n            this.tkRowsPerPageChange.emit(e.detail);\n          }\n        }}\n      ></tk-select>\n    );\n  }\n\n  private renderInput(totalPages: number): HTMLTkInputElement {\n    return (\n      <tk-input\n        style={{ width: '70px' }}\n        mode=\"text\"\n        min={1}\n        max={totalPages}\n        value={this.inputValue}\n        icon=\"chevron_right\"\n        iconPosition=\"right\"\n        onTk-change={(event: CustomEvent) => {\n          this.handlePageInputChange(event.detail.toString());\n        }}\n        onTk-blur={() => this.validateAndUpdatePage()}\n      />\n    );\n  }\n\n  render() {\n    const totalPages = this.getTotalPages();\n\n    return (\n      <div class=\"tk-pagination-container\">\n        <div class=\"tk-pagination-start\">{this.renderTag(totalPages)}</div>\n        {this.renderContent(totalPages)}\n        <div class=\"tk-pagination-end\">\n          {this.renderSelect()}\n          {this.renderInput(totalPages)}\n        </div>\n      </div>\n    );\n  }\n}\n"],"version":3}