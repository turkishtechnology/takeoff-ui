{"file":"tk-dialog.js","mappings":"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","names":["TkDialog","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-dialog/tk-dialog.scss?tag=tk-dialog","src/components/tk-dialog/tk-dialog.tsx"],"sourcesContent":["tk-dialog {\n  display: none;\n\n  &[visible],\n  &[visible='true'] {\n    display: block;\n  }\n}\n\n.tk-dialog-mask {\n  position: fixed;\n  height: 100%;\n  width: 100%;\n  left: 0;\n  top: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1500;\n  opacity: 0;\n  transition: opacity 0.3s ease-in-out;\n\n  &.tk-dialog-mask-blur {\n    backdrop-filter: blur(2px);\n  }\n\n  .tk-dialog-overlay {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    z-index: 0;\n  }\n\n  &.tk-dialog-visible {\n    opacity: 1;\n  }\n\n  &.tk-dialog-mask-hidden {\n    background-color: transparent;\n  }\n\n  &:not(.tk-dialog-mask-hidden) {\n    &.tk-dialog-mask-lightest {\n      background-color: var(--overlay-black-lightest);\n    }\n\n    &.tk-dialog-mask-light {\n      background-color: var(--overlay-black-light);\n    }\n\n    &.tk-dialog-mask-base {\n      background-color: var(--overlay-black-base);\n    }\n\n    &.tk-dialog-mask-dark {\n      background-color: var(--overlay-black-dark);\n    }\n\n    &.tk-dialog-mask-darkest {\n      background-color: var(--overlay-black-darkest);\n    }\n  }\n}\n\n.tk-dialog {\n  font-family: var(--family-title);\n  display: flex;\n  max-height: 90%;\n  flex-direction: column;\n  align-items: flex-start;\n  border-radius: var(--radius-xl);\n  border: 1px solid var(--border-lightest);\n  background: var(--static-light);\n  box-shadow: var(--effect-1-default-base);\n  z-index: 100;\n\n  .tk-dialog-header {\n    display: flex;\n    padding: var(--dialog-header-base-v-padding) var(--dialog-header-base-h-padding);\n    justify-content: space-between;\n    align-items: flex-start;\n    align-self: stretch;\n\n    border-top-left-radius: var(--radius-xl);\n    border-top-right-radius: var(--radius-xl);\n\n    .tk-dialog-header-content {\n      display: flex;\n      align-items: center;\n      gap: var(--dialog-header-base-gap);\n\n      .tk-dialog-title-container {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-start;\n\n        .tk-dialog-title {\n          color: var(--text-darkest);\n          font-family: var(--desktop-title-h5-font);\n          font-size: var(--desktop-title-h5-size);\n          font-style: normal;\n          font-weight: 400;\n          line-height: var(--desktop-title-h5-line-height);\n          /* 125% */\n        }\n\n        .tk-dialog-subtitle {\n          color: var(--text-base);\n          font-family: var(--desktop-subheading-xs-font);\n          font-size: var(--desktop-subheading-xs-size);\n          font-style: normal;\n          font-weight: 400;\n          line-height: var(--desktop-subheading-xs-line-height);\n          /* 150% */\n        }\n      }\n    }\n\n    .tk-dialog-header-close-button {\n      display: flex;\n      color: var(--icon-sub-base);\n      width: var(--dialog-header-base-close-icon-size);\n      height: var(--dialog-header-base-close-icon-size);\n      padding: var(--sizes-small-full-padding, 6px);\n      justify-content: center;\n      align-items: center;\n      gap: var(--dialog-header-small-gap);\n      border-radius: var(--sizes-small-radius, 8px);\n\n      &:focus {\n        box-shadow: var(--neutral-focus);\n      }\n    }\n\n    &.tk-dialog-header-divided {\n      border-bottom: var(--spacing-px) solid var(--border-light);\n    }\n\n    &.tk-dialog-header-light {\n      border-bottom: var(--spacing-px) solid var(--border-light);\n      background: var(--background-lightest);\n    }\n\n    &.tk-dialog-header-dark {\n      background: var(--background-darkest);\n\n      .tk-dialog-title-container {\n        .tk-dialog-subtitle {\n          color: var(--text-sub-base);\n        }\n\n        .tk-dialog-title {\n          color: var(--text-lightest);\n        }\n      }\n\n      .tk-dialog-header-close-button {\n        color: var(--icon-base);\n      }\n    }\n\n    &.tk-dialog-header-primary {\n      background: var(--primary-base);\n\n      .tk-dialog-title-container {\n        .tk-dialog-subtitle {\n          color: var(--primary-lightest);\n        }\n\n        .tk-dialog-title {\n          color: var(--text-lightest);\n        }\n      }\n\n      .tk-dialog-header-close-button {\n        color: var(--primary-lightest);\n      }\n    }\n  }\n\n  .tk-dialog-content {\n    padding: var(--dialog-body-base-v-padding) var(--dialog-body-base-h-padding);\n    align-self: stretch;\n    overflow-y: auto;\n\n    &::-webkit-scrollbar {\n      width: 6px;\n      background: var(--background-lightest);\n      opacity: 1;\n      transition: opacity 0.3s ease;\n    }\n\n    &::-webkit-scrollbar-track {\n      background: var(--background-lightest);\n      border-radius: 2px;\n      opacity: 1;\n      transition: opacity 0.3s ease;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: var(--secondary-sub-base);\n      border-radius: 3px;\n      opacity: 1;\n      transition: opacity 0.3s ease;\n    }\n  }\n\n  .tk-dialog-footer {\n    display: flex;\n    padding: var(--dialog-footer-base-v-padding) var(--dialog-footer-base-h-padding);\n    justify-content: flex-end;\n    align-self: stretch;\n\n    ::slotted([slot='footer-actions']) {\n      display: flex;\n      align-items: center;\n      gap: var(--dialog-footer-base-gap);\n    }\n  }\n}\n","import { Component, Method, Prop, State, Watch, h, Event, EventEmitter, Element, ComponentInterface } from '@stencil/core';\nimport classNames from 'classnames';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * The `TkDialog` component provides a customizable modal dialog for displaying important information or requesting user input. It supports various configurations including different header types, variants, and customizable content.\n * @slot default - Default slot to detect child to inner content.\n * @slot container - Custom container template.\n * @slot header - Custom header template.\n * @slot content - Custom content template.\n * @slot footer - Custom footer template.\n * @slot footer-actions - Custom actions template to default footer.\n * @react `import { TkDialog } from '@takeoff-ui/react'`\n * @vue `import { TkDialog } from '@takeoff-ui/vue'`\n * @angular `import { TkDialog } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-dialog',\n  styleUrl: 'tk-dialog.scss',\n})\nexport class TkDialog implements ComponentInterface {\n  private bodyOverflow: string;\n  private bodyPaddingRight: string;\n\n  @Element() el: HTMLTkDialogElement;\n\n  @State() hasContainerSlot: boolean;\n  @State() hasContentSlot: boolean;\n  @State() hasDefaultSlotContent: boolean;\n  @State() hasFooterActionsSlot: boolean;\n  @State() hasFooterSlot: boolean;\n  @State() hasHeaderSlot: boolean;\n\n  /**\n   * Controls the visibility of the dialog\n   */\n  @Prop({ reflect: true }) visible: boolean = false;\n  @Watch('visible')\n  visibleChanged(newValue: boolean) {\n    if (newValue) {\n      this.tkOpen.emit();\n      if (!this.hideBackdrop) {\n        this.blockBodyScroll();\n      }\n    } else {\n      this.tkClose.emit();\n      if (!this.hideBackdrop) {\n        this.unblockBodyScroll();\n      }\n    }\n  }\n\n  /**\n   * The header text\n   */\n  @Prop() header: string;\n\n  /**\n   * Header type\n   */\n  @Prop() headerType: 'basic' | 'divided' | 'light' | 'dark' | 'primary' = 'basic';\n\n  /**\n   * Controls whether the close button is shown\n   */\n  @Prop() showCloseButton: boolean = true;\n\n  /**\n   * Controls whether the header is shown\n   */\n  @Prop() showHeader: boolean = true;\n\n  /**\n   * Controls whether the variant sign is shown\n   */\n  @Prop() showVariantSign: boolean = true;\n\n  /**\n   * The subheader text\n   */\n  @Prop() subheader: string;\n\n  /**\n   * The variant of the dialog\n   */\n  @Prop() variant: 'success' | 'info' | 'warning' | 'danger' = 'info';\n\n  /**\n   * Controls whether the backdrop is shown\n   * @defaultValue false\n   */\n  @Prop() hideBackdrop: boolean = false;\n\n  /**\n   * Appearance of the mask\n   * @defaultValue base\n   */\n  @Prop() maskVariant: 'lightest' | 'light' | 'base' | 'dark' | 'darkest' = 'base';\n\n  /**\n   * Controls whether the dialog has a blur background\n   * @defaultValue false\n   */\n  @Prop() isMaskBlur: boolean = false;\n\n  /**\n   * The style attribute of container element\n   */\n  @Prop() containerStyle?: any = null;\n\n  /**\n   * Prevents the dialog from being dismissed by clicking outside\n   * @defaultValue false\n   */\n  @Prop() preventDismiss: boolean = false;\n\n  /**\n   * Event emitted when the dialog is closed\n   */\n  @Event({ eventName: 'tk-close' }) tkClose: EventEmitter<void>;\n\n  /**\n   * Event emitted when the dialog is opened\n   */\n  @Event({ eventName: 'tk-open' }) tkOpen: EventEmitter<void>;\n\n  /**\n   * Event emitted when the dialog visibility changes\n   */\n  @Event({ eventName: 'tk-visible-change' }) tkVisibleChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    this.hasContainerSlot = !!this.el.querySelector(':scope > [slot=\"container\"]');\n    this.hasHeaderSlot = !!this.el.querySelector(':scope > [slot=\"header\"]');\n    this.hasContentSlot = !!this.el.querySelector(':scope > [slot=\"content\"]');\n    this.hasFooterSlot = !!this.el.querySelector(':scope > [slot=\"footer\"]');\n    this.hasFooterActionsSlot = !!this.el.querySelector(':scope > [slot=\"footer-actions\"]');\n\n    this.hasDefaultSlotContent = Array.from(this.el.childNodes).some(node => {\n      return node.nodeType === Node.ELEMENT_NODE && !(node as HTMLElement).hasAttribute('slot');\n    });\n  }\n\n  disconnectedCallback() {\n    if (!this.hideBackdrop) {\n      this.unblockBodyScroll();\n    }\n  }\n\n  /**\n   * Requests to open the dialog by emitting a tk-open event.\n   * Note: This method only emits an event. The dialog will only open if the parent component\n   * listens for this event and updates the 'visible' prop to true.\n   */\n  @Method()\n  async open() {\n    this.tkOpen.emit();\n  }\n\n  /**\n   * Requests to close the dialog by emitting a tk-close event.\n   * Note: This method only emits an event. The dialog will only close if the parent component\n   * listens for this event and updates the 'visible' prop to false.\n   */\n  @Method()\n  async close() {\n    this.tkClose.emit();\n  }\n\n  private blockBodyScroll() {\n    if (document.body.style.overflow !== 'hidden') {\n      this.bodyOverflow = document.body.style.overflow;\n      this.bodyPaddingRight = document.body.style.paddingRight;\n      const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n      document.body.style.paddingRight = `${scrollbarWidth}px`;\n      document.body.style.overflow = 'hidden';\n    }\n  }\n\n  private unblockBodyScroll() {\n    document.body.style.overflow = this.bodyOverflow;\n    document.body.style.paddingRight = this.bodyPaddingRight;\n  }\n\n  private getVariantIcon() {\n    switch (this.variant) {\n      case 'success':\n        return 'check_circle';\n      case 'warning':\n        return 'warning';\n      case 'danger':\n        return 'error';\n      default:\n        return 'info';\n    }\n  }\n\n  private handleCloseButtonClick = () => {\n    this.tkClose.emit();\n    this.tkVisibleChange.emit(false);\n  };\n\n  private handleOverlayClick = () => {\n    if (!this.preventDismiss) {\n      this.tkClose.emit();\n      this.tkVisibleChange.emit(false);\n    }\n  };\n\n  private createHeader() {\n    if (this.showHeader) {\n      if (this.hasHeaderSlot) {\n        return <slot name=\"header\"></slot>;\n      } else {\n        const headerClasses = classNames('tk-dialog-header', `tk-dialog-header-${this.headerType}`);\n\n        return (\n          <div class={headerClasses}>\n            <div class=\"tk-dialog-header-content\">\n              {this.showVariantSign && (\n                <tk-icon\n                  sign\n                  size=\"xlarge\"\n                  {...getIconElementProps(this.getVariantIcon(), { class: classNames('fill tk-dialog-sign-icon'), variant: this.variant }, 'rounded', 'span')}\n                />\n              )}\n              <div class=\"tk-dialog-title-container\">\n                {this.subheader && <span class=\"tk-dialog-subtitle\">{this.subheader}</span>}\n                {this.header && <span class=\"tk-dialog-title\">{this.header}</span>}\n              </div>\n            </div>\n            {this.showCloseButton && (\n              <tk-button variant=\"neutral\" icon=\"close\" size=\"small\" type=\"text\" onTk-click={this.handleCloseButtonClick} aria-label=\"Close dialog\"></tk-button>\n            )}\n          </div>\n        );\n      }\n    }\n    return null;\n  }\n\n  private createContent() {\n    if (this.hasContentSlot) {\n      return (\n        <div class=\"tk-dialog-content\">\n          <slot name=\"content\"></slot>\n        </div>\n      );\n    } else if (this.hasDefaultSlotContent) {\n      return (\n        <div class=\"tk-dialog-content\">\n          <slot></slot>\n        </div>\n      );\n    }\n\n    return null;\n  }\n\n  private createFooter() {\n    if (this.hasFooterSlot) {\n      return <slot name=\"footer\"></slot>;\n    } else if (this.hasFooterActionsSlot) {\n      return (\n        <div class=\"tk-dialog-footer\">\n          <slot name=\"footer-actions\"></slot>\n        </div>\n      );\n    }\n    return null;\n  }\n\n  private createDialog() {\n    const header = this.createHeader();\n    const content = this.createContent();\n    const footer = this.createFooter();\n\n    const dialogClasses = classNames('tk-dialog', `tk-dialog-${this.variant}`);\n    const rootProps = {\n      'class': dialogClasses,\n      'style': { ...this.containerStyle },\n      'role': 'dialog',\n      'aria-modal': true,\n    };\n\n    return (\n      <div {...rootProps}>\n        {header}\n        {content}\n        {footer}\n      </div>\n    );\n  }\n\n  private renderMask() {\n    const dialog = this.hasContainerSlot ? <slot name=\"container\"></slot> : this.createDialog();\n    const maskClasses = classNames('tk-dialog-mask', `tk-dialog-mask-${this.maskVariant}`, {\n      'tk-dialog-visible': this.visible,\n      'tk-dialog-mask-hidden': this.hideBackdrop,\n      'tk-dialog-mask-blur': this.isMaskBlur,\n    });\n    return (\n      <div class={maskClasses}>\n        <div class=\"tk-dialog-overlay\" onClick={() => this.handleOverlayClick()}></div>\n        {dialog}\n      </div>\n    );\n  }\n  render() {\n    return this.renderMask();\n  }\n}\n"],"version":3}