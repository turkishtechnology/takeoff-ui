{"file":"p-BnDnaPri.js","mappings":";;;AAAA,MAAM,aAAa,GAAG,u3CAAu3C;;MCch4C,SAAS,iBAAAA,kBAAA,CAAA,MAAA,SAAA,SAAAC,CAAA,CAAA;AALtB,IAAA,WAAA,GAAA;;;;AAUE;;;AAGG;AACK,QAAA,IAAW,CAAA,WAAA,GAA8B,YAAY;AA6C9D;IAjCC,iBAAiB,GAAA;AACf,QAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,IAAI,CACvD,IAAI,IAAG,EAAA,IAAA,EAAA,CAAA,CAAC,OAAA,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,YAAY,IAAI,CAAE,IAAoB,CAAC,YAAY,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,SAAS,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,IAAI,EAAA,CAAG,MAAM,IAAG,CAAC,CAAC,CAAA,EAAA,CAC1K;;IAGK,aAAa,GAAA;QACnB,MAAM,MAAM,GAA8B,EAAE;AAC5C,QAAA,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,MAAM,KAAK,GAAG,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,GAAG,GAAG,IAAI,CAAC,EAAE,CAAI,EAAA,CAAA,GAAG,IAAI,CAAC,EAAE;AACpE,YAAA,MAAM,CAAC,SAAS,GAAG,KAAK;AACxB,YAAA,MAAM,CAAC,YAAY,GAAG,KAAK;;AAG7B,QAAA,IAAI,IAAI,CAAC,EAAE,EAAE;YACX,MAAM,KAAK,GAAG,OAAO,IAAI,CAAC,EAAE,KAAK,QAAQ,GAAG,GAAG,IAAI,CAAC,EAAE,CAAI,EAAA,CAAA,GAAG,IAAI,CAAC,EAAE;AACpE,YAAA,MAAM,CAAC,UAAU,GAAG,KAAK;AACzB,YAAA,MAAM,CAAC,WAAW,GAAG,KAAK;;AAE5B,QAAA,OAAO,MAAM;;IAGf,MAAM,GAAA;AACJ,QAAA,QACE,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE,UAAU,CAAC,YAAY,EAAE,CAAA,WAAA,EAAc,IAAI,CAAC,WAAW,CAAE,CAAA,CAAC,EAAE,IAAI,EAAC,WAAW,EAAA,kBAAA,EAAmB,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,EAAE,EACrJ,EAAA,IAAI,CAAC,cAAc,KAClB,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,oBAAoB,EAAA,EAC7B,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAQ,CACJ,CACP,CACG;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-divider/tk-divider.scss?tag=tk-divider&encapsulation=shadow","src/components/tk-divider/tk-divider.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.tk-divider {\n  &.tk-divider-horizontal {\n    margin: 16px 0;\n    border-top: var(--spacing-px) solid var(--background-light);\n\n    &:has(.tk-divider-content) {\n      border-top: 0 !important;\n    }\n\n    .tk-divider-content {\n      display: flex;\n      align-items: center;\n\n      color: var(--text-base);\n      font-family: var(--desktop-body-2xs-font, Geologica);\n      font-size: var(--desktop-body-2xs-size, 11px);\n      font-style: normal;\n      font-weight: 400;\n      line-height: var(--line-height-xxs-normal, 16px);\n\n      &::before {\n        flex: 1 1 0%;\n        height: 1px;\n        content: '';\n        border-top: var(--spacing-px) solid var(--background-light);\n        margin-right: 8px;\n      }\n\n      &::after {\n        flex: 1 1 0%;\n        content: '';\n        border-top: var(--spacing-px) solid var(--background-light);\n        margin-left: 8px;\n      }\n    }\n  }\n\n  &.tk-divider-vertical {\n    position: relative;\n    display: flex;\n    justify-content: center;\n    min-height: 100%;\n    margin: 0 16px;\n\n    &::before {\n      content: '';\n      position: absolute;\n      display: block;\n      height: 100%;\n      inset-block-start: 0;\n      inset-inline-start: 50%;\n      border-inline-start: var(--spacing-px) solid var(--background-light);\n      box-sizing: border-box;\n    }\n  }\n}\n","import { Component, h, Prop, ComponentInterface, State, Element } from '@stencil/core';\nimport classNames from 'classnames';\n\n/**\n * TkDivider is a component that allows you to separate different sections, elements and content.\n * @react `import { TkDivider } from '@takeoff-ui/react'`\n * @vue `import { TkDivider } from '@takeoff-ui/vue'`\n * @angular `import { TkDivider } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-divider',\n  styleUrl: 'tk-divider.scss',\n  shadow: true,\n})\nexport class TkDivider implements ComponentInterface {\n  @Element() el: HTMLTkDividerElement;\n\n  @State() hasDefaultSlot: boolean;\n\n  /**\n   * Controls the orientation of the divider component.\n   * @defaultValue horizontal\n   */\n  @Prop() orientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Controls vertical spacing\n   */\n  @Prop() mx?: string | number;\n\n  /**\n   * Controls horizontal spacing\n   */\n  @Prop() my?: string | number;\n\n  componentWillLoad() {\n    this.hasDefaultSlot = Array.from(this.el.childNodes).some(\n      node => (node.nodeType === Node.ELEMENT_NODE && !(node as HTMLElement).hasAttribute('slot')) || (node.nodeType === Node.TEXT_NODE && node.textContent?.trim().length > 0),\n    );\n  }\n\n  private getRootStyles() {\n    const styles: { [key: string]: string } = {};\n    if (this.my) {\n      const space = typeof this.my === 'number' ? `${this.my}px` : this.my;\n      styles.marginTop = space;\n      styles.marginBottom = space;\n    }\n\n    if (this.mx) {\n      const space = typeof this.mx === 'number' ? `${this.mx}px` : this.mx;\n      styles.marginLeft = space;\n      styles.marginRight = space;\n    }\n    return styles;\n  }\n\n  render() {\n    return (\n      <div class={classNames('tk-divider', `tk-divider-${this.orientation}`)} role=\"separator\" aria-orientation={this.orientation} style={this.getRootStyles()}>\n        {this.hasDefaultSlot && (\n          <div class=\"tk-divider-content\">\n            <slot />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}