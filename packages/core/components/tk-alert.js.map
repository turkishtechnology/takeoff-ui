{"file":"tk-alert.js","mappings":"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","names":["TkAlert","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-alert/tk-alert.scss?tag=tk-alert&encapsulation=shadow","src/components/tk-alert/tk-alert.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.tk-alert-container {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: var(--toast-base-gap);\n  border-radius: var(--toast-base-radius);\n  box-shadow: var(--effect-1-default-lg);\n  padding: var(--toast-base-v-padding) var(--toast-base-h-padding);\n  border-width: 1px;\n  border-style: solid;\n\n  &.tk-alert-alignment-center {\n    align-items: center;\n  }\n  &.tk-alert-alignment-start {\n    align-items: flex-start;\n  }\n  &.tk-alert-alignment-end {\n    align-items: flex-end;\n  }\n\n  .tk-alert-content {\n    display: flex;\n    justify-content: flex-start;\n    flex-direction: column;\n    gap: var(--toast-base-content-gap);\n    width: 100%;\n\n    &.message-content {\n      justify-content: center;\n    }\n  }\n\n  .tk-alert-content {\n    .tk-alert-header {\n      font-size: var(--desktop-body-s-size);\n      font-weight: 400;\n      line-height: 20px;\n    }\n\n    .tk-alert-message {\n      font-size: var(--desktop-body-xs-size);\n      font-weight: 300;\n      line-height: 18px;\n    }\n  }\n\n  &.success {\n    border-color: var(--states-success-base);\n\n    &.filled {\n      background-color: var(--states-success-base);\n    }\n\n    &.filledlight {\n      background-color: var(--states-success-light);\n    }\n\n    &.outlined {\n      background-color: var(--background-lightest);\n    }\n\n    &.gradient {\n      background: var(--gradient-success-gradient-tozero, linear-gradient(270deg, rgba(202, 241, 216, 0) 89%, #a0e6ba 100%));\n    }\n  }\n\n  &.info {\n    border-color: var(--states-info-base);\n\n    &.filled {\n      background-color: var(--states-info-base);\n    }\n\n    &.filledlight {\n      background-color: var(--states-info-light);\n    }\n\n    &.outlined {\n      background-color: var(--background-lightest);\n    }\n\n    &.gradient {\n      background: var(--gradient-info-gradient-tozero, linear-gradient(270deg, rgba(208, 225, 253, 0) 89%, #abc9fb 100%));\n    }\n  }\n\n  &.danger {\n    border-color: var(--states-danger-base);\n\n    &.filled {\n      background-color: var(--states-danger-base);\n    }\n\n    &.filledlight {\n      background-color: var(--states-danger-light);\n    }\n\n    &.outlined {\n      background-color: var(--background-lightest);\n    }\n\n    &.gradient {\n      background: var(--gradient-danger-gradinet-tozero, linear-gradient(270deg, rgba(255, 208, 206, 0) 89%, #ff8780 100%));\n    }\n  }\n\n  &.warning {\n    border-color: var(--states-warning-base);\n\n    &.filled {\n      background-color: var(--states-warning-base);\n    }\n\n    &.filledlight {\n      background-color: var(--states-warning-light);\n    }\n\n    &.outlined {\n      background-color: var(--background-lightest);\n    }\n\n    &.gradient {\n      background: var(--gradient-warning-gradient-tozero, linear-gradient(270deg, rgba(246, 222, 149, 0) 89%, #f2d066 100%));\n    }\n  }\n\n  &.neutral {\n    border-color: var(--border-sub-base);\n\n    &.filled {\n      background-color: var(--background-sub-base);\n\n      .tk-alert-content {\n        .tk-alert-header {\n          color: var(--text-darkest);\n        }\n\n        .tk-alert-message {\n          color: var(--text-dark);\n        }\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--background-light);\n    }\n\n    &.outlined {\n      background-color: var(--background-lightest);\n    }\n\n    &.gradient {\n      background: var(--gradient-gradient-gray, linear-gradient(270deg, rgba(202, 207, 216, 0) 89%, #cacfd8 100%));\n    }\n  }\n\n  &.filled {\n    .tk-alert-content {\n      .tk-alert-header {\n        color: var(--text-lightest);\n      }\n\n      .tk-alert-message {\n        color: var(--text-lightest);\n      }\n    }\n  }\n\n  &.filledlight,\n  &.outlined,\n  &.gradient {\n    .tk-alert-content {\n      .tk-alert-header {\n        color: var(--text-darkest);\n      }\n\n      .tk-alert-message {\n        color: var(--text-dark);\n      }\n    }\n  }\n}\n","import { Component, Prop, h, ComponentInterface, Element, Fragment } from '@stencil/core';\nimport classNames from 'classnames';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * The TkAlert component is designed to display contextual feedback messages, such as success, warnings, informational notices, and errors.\n * @slot right-action - Custom actions template to right content.\n * @slot footer-action - Custom actions template to default footer.\n * @react `import { TkAlert } from '@takeoff-ui/react'`\n * @vue `import { TkAlert } from '@takeoff-ui/vue'`\n * @angular `import { TkAlert } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-alert',\n  styleUrl: 'tk-alert.scss',\n  shadow: true,\n})\nexport class TkAlert implements ComponentInterface {\n  private hasRightActionSlot: boolean = false;\n  private hasFooterActionSlot: boolean = false;\n  private hasContentSlot: boolean = false;\n\n  @Element() el: HTMLTkAlertElement;\n\n  /**\n   * Defines the visual variant of the alert.\n   * @defaultValue 'neutral'\n   */\n  @Prop() variant: 'success' | 'warning' | 'info' | 'danger' | 'neutral' = 'neutral';\n\n  /**\n   * The header text displayed at the top of the alert.\n   */\n  @Prop() header: string;\n\n  /**\n   * The message text displayed within the alert.\n   */\n  @Prop() message: string | string[];\n\n  /**\n   * The icon displayed in the alert. If not provided, a default icon is used based on the variant.\n   */\n  @Prop() icon: string | IIconOptions;\n\n  /**\n   * Size of the icon displayed in the alert ('small', 'base', or 'large').\n   * @defaultValue 'base'\n   */\n  @Prop() iconSize: 'small' | 'base' | 'large' | 'xlarge' = 'large';\n\n  /**\n   * Alignment of the alert content ('start', 'center', or 'end').\n   * @defaultValue 'center'\n   */\n  @Prop() alignItems: 'start' | 'center' | 'end' = 'center';\n\n  /**\n   * This field specifies the design type of the component.\n   * @defaultValue filled\n   */\n  @Prop() type: 'filled' | 'filledlight' | 'outlined' | 'gradient' = 'filled';\n\n  /**\n   * The alert can be closed by the user.\n   * @defaultValue false\n   */\n  @Prop() removable: boolean = false;\n\n  private handleCloseButtonClick() {\n    this.el.remove();\n  }\n\n  private renderIcon() {\n    let iconValue = this.icon;\n    if (iconValue == undefined) {\n      if (this.variant == 'success') iconValue = 'check_circle';\n      else if (this.variant == 'info') iconValue = 'info';\n      else if (this.variant == 'danger') iconValue = 'error';\n      else if (this.variant == 'warning') iconValue = 'warning';\n    }\n    return <tk-icon fill {...getIconElementProps(iconValue, { variant: this.variant, sign: true, size: this.iconSize }, 'rounded', 'i')} />;\n  }\n\n  private renderContent() {\n    let header, message;\n\n    if (this.header?.length > 0) {\n      header = <div class=\"tk-alert-header\">{this.header}</div>;\n    }\n\n    if (typeof this.message == 'string') {\n      message = <div class=\"tk-alert-message\">{this.message}</div>;\n    } else if (this.message?.every(item => typeof item === 'string')) {\n      message = (\n        <div class=\"tk-alert-message-holder\">\n          {this.message?.map(m => (\n            <div class=\"tk-alert-message\">{m}</div>\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div class={classNames('tk-alert-content', !this.header && 'message-content')}>\n        <div>\n          {header}\n          {message}\n        </div>\n        {this.hasFooterActionSlot && <slot name=\"footer-action\"></slot>}\n      </div>\n    );\n  }\n\n  private renderCloseButton() {\n    if (!this.removable) return null;\n\n    const buttonVariant = this.type == 'filled' ? 'white' : 'neutral';\n\n    return <tk-button icon=\"close\" size=\"small\" variant={buttonVariant} type=\"text\" onTk-click={() => this.handleCloseButtonClick()}></tk-button>;\n  }\n\n  render() {\n    this.hasContentSlot = !!this.el.querySelector('[slot=\"content\"]');\n    this.hasRightActionSlot = !!this.el.querySelector('[slot=\"right-action\"]');\n    this.hasFooterActionSlot = !!this.el.querySelector('[slot=\"footer-action\"]');\n\n    const rootClasses = classNames('tk-alert-container', this.variant, this.type, `tk-alert-alignment-${this.alignItems}`);\n    const icon = this.renderIcon();\n    const content = this.renderContent();\n    const closeButton = this.renderCloseButton();\n\n    return (\n      <div class={rootClasses}>\n        {this.hasContentSlot ? (\n          <slot name=\"content\" />\n        ) : (\n          <Fragment>\n            {icon}\n            {content}\n          </Fragment>\n        )}\n        {this.hasRightActionSlot && <slot name=\"right-action\"></slot>}\n        {closeButton}\n      </div>\n    );\n  }\n}\n"],"version":3}