{"file":"p-DsC7NjXG.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-badge/tk-badge.scss?tag=tk-badge&encapsulation=shadow","src/components/tk-badge/tk-badge.tsx"],"sourcesContent":[":host {\n  display: inline-flex;\n}\n\n.tk-badge-container.has-slot {\n  display: inline-flex;\n  position: relative;\n\n  .tk-badge {\n    position: absolute;\n    top: -8px;\n    right: -10px;\n\n    &.tk-badge.dot {\n      top: -3px;\n      right: -3px;\n    }\n  }\n\n  div {\n    display: inline-block !important;\n  }\n}\n\n.tk-badge-container {\n  display: inline-flex;\n\n  .tk-badge {\n    font-family: 'Geologica', sans-serif;\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    outline: none;\n\n    span {\n      overflow: hidden;\n      white-space: nowrap;\n    }\n\n    &.primary {\n      border: 0px;\n      color: var(--primary-base);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--primary-base);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--primary-base);\n      }\n\n      &.filledlight {\n        background-color: var(--primary-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.secondary {\n      border: 0px;\n      color: var(--secondary-darkest);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--secondary-darkest);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--secondary-base);\n      }\n\n      &.filledlight {\n        background-color: var(--secondary-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.neutral {\n      border: 0px;\n      color: var(--text-darkest);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--background-darkest);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        color: var(--text-darkest);\n        border: 1px solid var(--background-darkest);\n      }\n\n      &.filledlight {\n        background-color: var(--background-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.info {\n      border: 0px;\n      color: var(--states-info-base);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--states-info-base);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--states-info-base);\n      }\n\n      &.filledlight {\n        background-color: var(--states-info-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.success {\n      border: 0px;\n      color: var(--states-success-dark);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--states-success-dark);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--states-success-dark);\n      }\n\n      &.filledlight {\n        background-color: var(--states-success-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.danger {\n      border: 0px;\n      color: var(--states-danger-dark);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--states-danger-dark);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--states-danger-dark);\n      }\n\n      &.filledlight {\n        background-color: var(--states-danger-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.warning {\n      border: 0px;\n      color: var(--states-warning-dark);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--states-warning-dark);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--states-warning-dark);\n      }\n\n      &.filledlight {\n        background-color: var(--states-warning-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.verified {\n      border: 0px;\n      color: var(--states-verified-dark);\n\n      &.filled {\n        color: var(--text-lightest);\n        background-color: var(--states-verified-dark);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        border: 1px solid var(--states-verified-dark);\n      }\n\n      &.filledlight {\n        background-color: var(--states-verified-light);\n      }\n\n      &.text {\n        background-color: transparent;\n      }\n    }\n\n    &.purple {\n      border: 0px;\n      color: var(--text-lightest);\n\n      &.filled {\n        background-color: var(--purple-600);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        color: var(--purple-600);\n        border: 1px solid var(--purple-600);\n      }\n\n      &.filledlight {\n        background-color: var(--purple-100);\n        color: var(--purple-600);\n      }\n\n      &.text {\n        background-color: transparent;\n        color: var(--purple-600);\n      }\n    }\n\n    &.cyan {\n      border: 0px;\n      color: var(--text-lightest);\n\n      &.filled {\n        background-color: var(--cyan-600);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        color: var(--cyan-600);\n        border: 1px solid var(--cyan-600);\n      }\n\n      &.filledlight {\n        background-color: var(--cyan-100);\n        color: var(--cyan-600);\n      }\n\n      &.text {\n        background-color: transparent;\n        color: var(--cyan-600);\n      }\n    }\n\n    &.business {\n      border: 0px;\n      color: var(--text-lightest);\n\n      &.filled {\n        background-color: var(--business-600);\n      }\n\n      &.outlined {\n        background-color: transparent;\n        color: var(--business-600);\n        border: 1px solid var(--business-600);\n      }\n\n      &.filledlight {\n        background-color: var(--business-100);\n        color: var(--business-600);\n      }\n\n      &.text {\n        background-color: transparent;\n        color: var(--business-600);\n      }\n    }\n\n    &.small {\n      height: 16px;\n      line-height: var(--desktop-body-2xs-line-height);\n      /* 145.455% */\n      font-size: var(--desktop-body-2xs-size);\n      border-radius: var(--badge-small-basic-radius);\n      padding: var(--badge-small-basic-v-padding) var(--badge-small-basic-right-padding) var(--badge-small-basic-v-padding) var(--badge-small-basic-left-padding);\n      gap: 2;\n\n      i {\n        font-size: var(--badge-small-left-icon-icon-size);\n        width: var(--badge-small-left-icon-icon-size);\n        height: var(--badge-small-left-icon-icon-size);\n      }\n\n      &.icon-only,\n      &.count {\n        width: 16px;\n        height: 16px;\n        padding: var(--spacing-none);\n        gap: var(--badge-small-basic-gap);\n      }\n    }\n\n    &.base {\n      height: 20px;\n      line-height: var(--desktop-body-xs-line-height);\n      /* 150% */\n      font-size: var(--desktop-body-xs-size);\n      border-radius: var(--badge-base-basic-radius);\n      padding: var(--badge-base-basic-v-padding) var(--badge-base-basic-right-padding) var(--badge-base-basic-v-padding) var(--badge-base-basic-left-padding);\n      gap: 4px;\n\n      i {\n        font-size: var(--badge-base-left-icon-icon-size);\n        width: var(--badge-base-left-icon-icon-size);\n        height: var(--badge-base-left-icon-icon-size);\n      }\n\n      &.icon-only,\n      &.count {\n        width: 20px;\n        height: 20px;\n        padding: var(--spacing-none);\n        gap: var(--badge-base-basic-gap);\n      }\n    }\n\n    &.large {\n      height: 24px;\n      line-height: var(--desktop-body-xs-line-height);\n      /* 150% */\n      font-size: var(--desktop-body-xs-size);\n      border-radius: var(--badge-large-basic-radius);\n      padding: var(--badge-large-basic-v-padding) var(--badge-large-basic-right-padding) var(--badge-large-basic-v-padding) var(--badge-large-basic-left-padding);\n      gap: 6px;\n\n      i {\n        font-size: var(--badge-large-left-icon-icon-size);\n        width: var(--badge-large-left-icon-icon-size);\n        height: var(--badge-large-left-icon-icon-size);\n        line-height: unset;\n      }\n\n      &.icon-only,\n      &.count {\n        width: 24px;\n        height: 24px;\n        padding: var(--spacing-none);\n        gap: var(--badge-large-basic-gap);\n      }\n    }\n\n    &.reverse {\n      flex-direction: row-reverse;\n\n      &.small {\n        gap: var(--badge-small-right-icon-gap);\n        padding: var(--badge-small-right-icon-v-padding) var(--badge-small-right-icon-right-padding) var(--badge-small-right-icon-v-padding)\n          var(--badge-small-right-icon-left-padding);\n\n        i {\n          font-size: var(--badge-small-right-icon-icon-size);\n          width: var(--badge-small-right-icon-icon-size);\n          height: var(--badge-small-right-icon-icon-size);\n        }\n      }\n\n      &.base {\n        gap: var(--badge-base-right-icon-gap);\n        padding: var(--badge-base-right-icon-v-padding) var(--badge-base-right-icon-right-padding) var(--badge-base-right-icon-v-padding) var(--badge-base-right-icon-left-padding);\n\n        i {\n          font-size: var(--badge-base-right-icon-icon-size);\n          width: var(--badge-base-right-icon-icon-size);\n          height: var(--badge-base-right-icon-icon-size);\n        }\n      }\n\n      &.large {\n        gap: var(--badge-large-right-icon-gap);\n        padding: var(--badge-large-right-icon-v-padding) var(--badge-large-right-icon-right-padding) var(--badge-large-right-icon-v-padding)\n          var(--badge-large-right-icon-left-padding);\n\n        i {\n          font-size: var(--badge-large-right-icon-icon-size);\n          width: var(--badge-large-right-icon-icon-size);\n          height: var(--badge-large-right-icon-icon-size);\n        }\n      }\n    }\n\n    &.rounded {\n      border-radius: var(--radius-full);\n    }\n\n    &.icon-only {\n      gap: 0px;\n      padding: var(--spacing-none);\n    }\n\n    &.dot {\n      width: 6px;\n      height: 6px;\n      gap: 0px;\n      padding: var(--spacing-none);\n      border: none !important;\n\n      &.primary {\n        background-color: var(--primary-base);\n      }\n\n      &.secondary {\n        background-color: var(--secondary-darkest);\n      }\n\n      &.neutral {\n        background-color: var(--background-darkest);\n      }\n\n      &.info {\n        background-color: var(--states-info-base);\n      }\n\n      &.success {\n        background-color: var(--states-success-dark);\n      }\n\n      &.danger {\n        background-color: var(--states-danger-dark);\n      }\n\n      &.warning {\n        background-color: var(--states-warning-dark);\n      }\n\n      &.verified {\n        background-color: var(--states-verified-dark);\n      }\n\n      &.purple {\n        background-color: var(--purple-600);\n      }\n\n      &.cyan {\n        background-color: var(--cyan-600);\n      }\n\n      &.business {\n        background-color: var(--business-600);\n      }\n    }\n  }\n}\n","import { Component, Prop, Element, h, State, ComponentInterface } from '@stencil/core';\nimport classNames from 'classnames';\nimport { getIconElementProps } from '../../utils/icon-props';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\n\n/**\n * The TkBadge component allows you to create a small badge for adding information like contextual data that needs to stand out and get noticed. It is also often useful in combination with other elements like a user avatar to show a number of new messages.\n * @react `import { TkBadge } from '@takeoff-ui/react'`\n * @vue `import { TkBadge } from '@takeoff-ui/vue'`\n * @angular `import { TkBadge } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-badge',\n  styleUrl: 'tk-badge.scss',\n  shadow: true,\n})\nexport class TkBadge implements ComponentInterface {\n  @Element() el: HTMLTkBadgeElement;\n\n  /**\n   * State to check if slot content exists.\n   * @defaultValue false\n   */\n  @State() hasSlot: boolean = false;\n\n  /**\n   * If true, shows a small dot on the badge.\n   * @defaultValue false\n   */\n  @Prop() dot: boolean = false;\n\n  /**\n   * This field specifies the design type of the component.\n   * @defaultValue filled\n   */\n  @Prop() type: 'filled' | 'filledlight' | 'outlined' | 'text' = 'filled';\n\n  /**\n   * Specifies a material icon name to be displayed.\n   */\n  @Prop() icon?: string | IIconOptions;\n\n  /**\n   * Defines the position of the icon.\n   * @defaultValue 'left'\n   */\n  @Prop() iconPosition: 'left' | 'right' = 'left';\n\n  /**\n   * Defines the label for the element.\n   */\n  @Prop() label: string;\n\n  /**\n   * Defines the number for the element.\n   */\n  @Prop() count: number | string;\n\n  /**\n   * Makes the badge corners rounded.\n   * @defaultValue false\n   */\n  @Prop() rounded: boolean = false;\n\n  /**\n   * Sets size for the component.\n   * @defaultValue 'base'\n   */\n  @Prop() size: 'large' | 'base' | 'small' = 'base';\n\n  /**\n   * Determines the badge's variant for different styles.\n   * @defaultValue 'primary'\n   */\n  @Prop() variant: 'primary' | 'secondary' | 'neutral' | 'info' | 'success' | 'danger' | 'warning' | 'verified' | 'purple' | 'cyan' | 'business' = 'primary';\n\n  componentDidLoad(): void {\n    this.hasSlot = this.el.shadowRoot.querySelector('slot')?.assignedNodes?.().length > 0;\n  }\n\n  private isValidCount(): boolean {\n    if (this.count === undefined || this.count === null) {\n      return false;\n    }\n\n    if (this.count === 0 || this.count === '0') {\n      return true;\n    }\n\n    // Handle other numeric strings and numbers\n    const numericValue = Number(this.count);\n    return !isNaN(numericValue);\n  }\n\n  private renderContent(): HTMLSpanElement {\n    let content;\n    if (!this.dot) {\n      const contentConfig = {\n        label: {\n          value: this.label,\n          class: 'label',\n        },\n        count: {\n          value: this.count,\n          class: 'count',\n        },\n      };\n      const type = this.label ? 'label' : this.isValidCount() ? 'count' : null;\n      const { value = '', class: contentClass = '' } = contentConfig[type] || {};\n      content = <span class={contentClass}>{value}</span>;\n    }\n    return content;\n  }\n\n  render() {\n    const isCountOnly = this.isValidCount() && !this.label && !this.dot && !this.icon;\n    const rootClasses = classNames('tk-badge-container', {\n      'has-slot': this.hasSlot,\n    });\n    const badgeClasses = classNames('tk-badge', this.variant, this.size, this.type, {\n      'rounded': this.rounded,\n      'reverse': this.icon && this.iconPosition === 'right',\n      'icon-only': this.icon && !this.label && !this.dot,\n      'dot': this.dot,\n      'count': isCountOnly,\n    });\n\n    const icon = !this.dot && this.icon && <tk-icon {...getIconElementProps(this.icon, { variant: null })} />;\n\n    return (\n      <div class={rootClasses}>\n        <slot />\n        <span class={badgeClasses}>\n          {icon}\n          {this.renderContent()}\n        </span>\n      </div>\n    );\n  }\n}\n"],"version":3}