{"file":"p-DFQnxT5R.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-button/tk-button.scss?tag=tk-button&encapsulation=shadow","src/components/tk-button/tk-button.tsx"],"sourcesContent":[":host {\n  display: inline-block;\n}\n\n:host(.full-width) {\n  width: 100%;\n\n  .tk-button {\n    width: 100%;\n  }\n}\n\n.tk-button {\n  font-family: 'Geologica', sans-serif;\n  font-weight: 400;\n  line-height: var(--desktop-body-m-base-line-height);\n  transition: all 200ms cubic-bezier(0.17, 0.67, 0.83, 0.67);\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n\n  &.primary {\n    border: 0px;\n    color: var(--static-white);\n\n    &.filled {\n      background-color: var(--primary-base);\n\n      &:hover {\n        background-color: var(--primary-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--primary-base);\n        box-shadow: var(--primary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--frames-sub-base);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--primary-base);\n      border: 1px solid var(--primary-base);\n\n      &:hover {\n        background-color: var(--primary-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        box-shadow: var(--primary-focus);\n      }\n\n      &:disabled {\n        color: var(--text-sub-base);\n        border: 1px solid var(--border-sub-base);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--primary-base);\n\n      &:hover {\n        background-color: var(--primary-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--primary-lightest);\n        box-shadow: var(--primary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--text-sub-base);\n      }\n    }\n\n    &.link {\n      color: var(--primary-base);\n\n      &:hover {\n        color: var(--primary-dark);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.secondary {\n    border: 0px;\n    color: var(--text-lightest);\n\n    &.filled {\n      background-color: var(--secondary-darkest);\n\n      &:hover {\n        background-color: var(--secondary-dark);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--secondary-darkest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--frames-sub-base);\n        color: var(--text-lightest);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--secondary-base);\n      border: 1px solid var(--secondary-base);\n\n      &:hover {\n        background-color: var(--secondary-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--text-sub-base);\n        border-color: var(--border-sub-base);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--secondary-base);\n\n      &:hover {\n        background-color: var(--secondary-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--secondary-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--text-sub-base);\n      }\n    }\n\n    &.link {\n      color: var(--secondary-dark);\n\n      &:hover {\n        color: var(--secondary-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.neutral {\n    border: 0px;\n    color: var(--text-lightest);\n\n    &.filled {\n      background-color: var(--frames-base);\n\n      .tk-button-icon {\n        color: var(--icon-lightest);\n      }\n\n      &:hover {\n        background-color: var(--frames-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--frames-base);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--frames-sub-base);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--text-darkest);\n      border: 1px solid var(--border-sub-base);\n\n      .tk-button-icon {\n        color: var(--icon-darkest);\n      }\n\n      &:hover {\n        background-color: var(--frames-lightest);\n        border: 1px solid var(--border-base);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        border: 1px solid var(--border-base);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--text-sub-base);\n        border-color: var(--border-sub-base);\n\n        .tk-button-icon {\n          color: var(--icon-sub-base);\n        }\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--text-darkest);\n\n      .tk-button-icon {\n        color: var(--icon-darkest);\n      }\n\n      &:hover {\n        background-color: var(--frames-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--frames-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--text-sub-base);\n\n        .tk-button-icon {\n          color: var(--icon-sub-base);\n        }\n      }\n    }\n\n    &.link {\n      color: var(--text-dark);\n\n      &:hover {\n        color: var(--text-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.info {\n    border: 0px;\n    color: var(--text-lightest);\n\n    &.filled {\n      background-color: var(--states-info-dark);\n\n      .tk-button-icon {\n        color: var(--icon-lightest);\n      }\n\n      &:hover {\n        background-color: var(--states-info-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-info-base);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--states-info-sub-base);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--states-info-dark);\n      border: 1px solid var(--states-info-dark);\n\n      &:hover {\n        background-color: var(--states-info-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--states-info-light);\n        border: 1px solid var(--states-info-light);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--states-info-dark);\n\n      &:hover {\n        background-color: var(--states-info-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-info-light);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--states-info-light);\n      }\n    }\n\n    &.link {\n      color: var(--states-info-dark);\n\n      &:hover {\n        color: var(--states-info-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.success {\n    border: 0px;\n    color: var(--text-lightest);\n\n    &.filled {\n      background-color: var(--states-success-dark);\n\n      .tk-button-icon {\n        color: var(--icon-lightest);\n      }\n\n      &:hover {\n        background-color: var(--states-success-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-success-dark);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--states-success-sub-base);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--states-success-dark);\n      border: 1px solid var(--states-success-dark);\n\n      &:hover {\n        background-color: var(--states-success-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--states-success-light);\n        border: 1px solid var(--states-success-light);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--states-success-dark);\n\n      &:hover {\n        background-color: var(--states-success-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-success-light);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--states-success-light);\n      }\n    }\n\n    &.link {\n      color: var(--states-success-dark);\n\n      &:hover {\n        color: var(--states-success-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.danger {\n    border: 0px;\n    color: var(--states-danger-dark);\n\n    &.filled {\n      background-color: var(--states-danger-dark);\n      color: var(--text-lightest);\n\n      .tk-button-icon {\n        color: var(--icon-lightest);\n      }\n\n      &:hover {\n        background-color: var(--states-danger-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-danger-dark);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--states-danger-light);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      border: 1px solid var(--states-danger-dark);\n\n      &:hover {\n        background-color: var(--states-danger-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--states-danger-light);\n        border: 1px solid var(--states-danger-light);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n\n      &:hover {\n        background-color: var(--states-danger-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-danger-light);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--states-danger-light);\n      }\n    }\n\n    &.link {\n      color: var(--states-danger-dark);\n\n      &:hover {\n        color: var(--states-danger-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.warning {\n    border: 0px;\n    color: var(--states-warning-dark);\n\n    &.filled {\n      background-color: var(--states-warning-dark);\n      color: var(--text-lightest);\n\n      .tk-button-icon {\n        color: var(--icon-lightest);\n      }\n\n      &:hover {\n        background-color: var(--states-warning-darkest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-warning-dark);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: var(--states-warning-sub-base);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      border: 1px solid var(--states-warning-dark);\n\n      &:hover {\n        background-color: var(--states-warning-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-light);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        color: var(--states-warning-light);\n        border: 1px solid var(--states-warning-light);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n\n      &:hover {\n        background-color: var(--states-warning-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--states-warning-light);\n        box-shadow: var(--secondary-focus);\n      }\n\n      &:disabled {\n        background-color: transparent;\n        color: var(--states-warning-light);\n      }\n    }\n\n    &.link {\n      color: var(--states-warning-dark);\n\n      &:hover {\n        color: var(--states-warning-darkest);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &.white {\n    border: 0px;\n    box-shadow: var(--secondary-focus);\n\n    &.filled {\n      background-color: var(--static-light);\n      color: var(--text-darkest);\n\n      .tk-button-icon {\n        color: var(--icon-darkest);\n      }\n\n      &:hover {\n        background-color: var(--background-lightest);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--static-light);\n      }\n\n      &:disabled {\n        background-color: var(--static-light);\n        color: var(--text-lightest);\n      }\n    }\n\n    &.outlined {\n      background-color: transparent;\n      color: var(--static-light);\n      border: 1px solid var(--static-light);\n\n      &:hover {\n        background-color: var(--overlay-white-light);\n        cursor: pointer;\n      }\n\n      &:focus-visible {\n        background-color: var(--overlay-white-lightest);\n      }\n\n      &:disabled {\n        color: var(--text-sub-base);\n        border-color: var(--border-sub-base);\n      }\n    }\n\n    &.text {\n      background-color: transparent;\n      color: var(--static-light);\n      box-shadow: none;\n\n      &:hover {\n        color: var(--text-dark);\n        background-color: var(--overlay-white-light);\n        cursor: pointer;\n      }\n    }\n\n    &.link {\n      color: var(--text-lightest);\n\n      &:hover {\n        color: var(--text-light);\n        cursor: pointer;\n      }\n    }\n  }\n\n  &:disabled {\n    cursor: not-allowed;\n    pointer-events: none;\n  }\n\n  &.reverse {\n    flex-direction: row-reverse;\n  }\n\n  &.small {\n    height: 32px;\n    font-size: var(--desktop-body-xs-size);\n    border-radius: var(--button-sizes-small-radius);\n    padding: var(--button-sizes-small-v-padding) var(--button-sizes-small-h-padding);\n    gap: var(--button-sizes-small-gap);\n\n    &.rounded {\n      height: unset;\n      border-radius: 100%;\n      padding: var(--fab-button-sizes-small-v-padding) var(--fab-button-sizes-small-h-padding);\n    }\n\n    i {\n      font-size: var(--button-sizes-small-icon-size);\n      width: var(--button-sizes-small-icon-size);\n      height: var(--button-sizes-small-icon-size);\n      line-height: unset;\n    }\n    &.icon-only {\n      padding: var(--sizes-small-full-padding, 6px);\n    }\n  }\n\n  &.base {\n    height: 40px;\n    font-size: var(--desktop-body-s-size);\n    border-radius: var(--button-sizes-base-radius);\n    padding: var(--button-sizes-base-v-padding) var(--button-sizes-base-h-padding);\n    gap: var(--button-sizes-base-gap);\n\n    &.rounded {\n      height: unset;\n      border-radius: 100%;\n      padding: var(--fab-button-sizes-base-v-padding) var(--fab-button-sizes-base-h-padding);\n    }\n\n    i {\n      font-size: var(--button-sizes-base-icon-size);\n      width: var(--button-sizes-base-icon-size);\n      height: var(--button-sizes-base-icon-size);\n      line-height: unset;\n    }\n    &.icon-only {\n      padding: var(--sizes-base-full-padding, 8px);\n    }\n  }\n\n  &.large {\n    height: 48px;\n    font-size: var(--desktop-body-m-base-size);\n    border-radius: var(--button-sizes-large-radius);\n    padding: var(--button-sizes-large-v-padding) var(--button-sizes-large-h-padding);\n    gap: var(--button-sizes-large-gap);\n\n    &.rounded {\n      height: unset;\n      border-radius: 100%;\n      padding: var(--fab-button-sizes-large-v-padding) var(--fab-button-sizes-large-h-padding);\n    }\n\n    i {\n      font-size: var(--button-sizes-large-icon-size);\n      width: var(--button-sizes-large-icon-size);\n      height: var(--button-sizes-large-icon-size);\n      line-height: unset;\n    }\n    &.icon-only {\n      padding: var(--sizes-large-full-padding, 12px);\n    }\n  }\n\n  &.link {\n    padding: 0;\n    background-color: transparent;\n    text-decoration: none;\n\n    &.underline span {\n      text-decoration: underline;\n    }\n\n    &:disabled {\n      color: var(--text-sub-base);\n    }\n\n    &.small {\n      height: 18px;\n\n      i {\n        font-size: var(--link-button-sizes-small-icon-size);\n        width: var(--link-button-sizes-small-icon-size);\n        height: var(--link-button-sizes-small-icon-size);\n      }\n    }\n\n    &.base {\n      height: 20px;\n\n      i {\n        font-size: var(--link-button-sizes-base-icon-size);\n        width: var(--link-button-sizes-base-icon-size);\n        height: var(--link-button-sizes-base-icon-size);\n      }\n    }\n\n    &.large {\n      height: 24px;\n\n      i {\n        font-size: var(--link-button-sizes-large-icon-size);\n        width: var(--link-button-sizes-large-icon-size);\n        height: var(--link-button-sizes-large-icon-size);\n      }\n    }\n  }\n\n  i {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n}\n","import { Component, ComponentInterface, Element, Prop, h, Event, Host, EventEmitter } from '@stencil/core';\nimport classNames from 'classnames';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * TkButton is an extension to standard input element with icons and theming.\n * @react `import { TkButton } from '@takeoff-ui/react'`\n * @vue `import { TkButton } from '@takeoff-ui/vue'`\n * @angular `import { TkButton } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-button',\n  styleUrl: 'tk-button.scss',\n  shadow: true,\n})\nexport class TkButton implements ComponentInterface {\n  @Element() el: HTMLTkButtonElement;\n\n  /**\n   * Disables the button, preventing user interaction.\n   */\n  @Prop() disabled: boolean;\n\n  /**\n   * Sets the button to full-width mode, making it span the container.\n   */\n  @Prop() fullWidth: boolean;\n\n  /**\n   * This field specifies the design type of the component.\n   * @defaultValue filled\n   */\n  @Prop({ mutable: true }) type: 'filled' | 'elevated' | 'outlined' | 'text' = 'filled';\n\n  /**\n   * Specifies a material icon name to be displayed.\n   */\n  @Prop() icon?: string | IIconOptions;\n\n  /**\n   * Defines the position of the icon.\n   * @defaultValue 'left'\n   */\n  @Prop() iconPosition: 'left' | 'right' = 'left';\n\n  /**\n   * Sets the URL the button should navigate to when clicked (for type=\"link\" buttons).\n   */\n  @Prop() href: string;\n\n  /**\n   * Specifies where to open the linked document (for type=\"link\" buttons).\n   */\n  @Prop() target: string;\n\n  /**\n   * Applies underline styling to the button (for type=\"link\" buttons).\n   */\n  @Prop() underline: boolean;\n\n  /**\n   * Label text displayed inside the button.\n   */\n  @Prop() label: string = '';\n\n  /**\n   * Shows a loading icon inside the button.\n   */\n  @Prop() loading: boolean;\n\n  /**\n   * Makes the button round with an icon-only style.\n   */\n  @Prop() rounded: boolean;\n\n  /**\n   * Sets size for the component.\n   * @defaultValue 'base'\n   */\n  @Prop() size: 'large' | 'base' | 'small' = 'base';\n\n  /**\n   * Sets the button type.\n   * @defaultValue 'button'\n   */\n  @Prop() mode: 'button' | 'submit' | 'reset' | 'link' = 'button';\n\n  /**\n   * Determines the button's variant for different styles.\n   */\n  @Prop() variant: 'primary' | 'secondary' | 'neutral' | 'info' | 'success' | 'danger' | 'warning' | 'white' = 'primary';\n\n  /**\n   * Emitted when the button click.\n   */\n  @Event({ eventName: 'tk-click' }) tkClick!: EventEmitter<MouseEvent>;\n\n  componentWillLoad() {\n    if (this.mode == 'link') {\n      this.type = null;\n    }\n  }\n\n  private handleClick(e: MouseEvent) {\n    if (this.disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    this.tkClick.emit(e);\n\n    if (this.mode === 'submit') {\n      const form = this.el.closest('form');\n      if (form) {\n        form.requestSubmit();\n      }\n    } else if (this.mode === 'reset') {\n      const form = this.el.closest('form');\n      if (form) {\n        form.reset();\n      }\n    }\n  }\n\n  render() {\n    const rootClasses = classNames(\n      'tk-button',\n      this.type,\n      {\n        'loading': this.loading && !this.disabled,\n        'reverse': this.icon && this.iconPosition == 'right',\n        'rounded': this.rounded && this.icon && (this.label == '' || this.label == null || this.label.length <= 0),\n        'link': this.mode == 'link',\n        'underline': this.underline,\n        'icon-only': (this.label == '' || this.label == null || this.label.length <= 0) && this.icon,\n      },\n      [this.variant],\n      [this.size],\n    );\n\n    let icon;\n    const spinnerElement = <tk-spinner size={this.size === 'large' ? 'small' : this.size === 'base' ? 'xsmall' : 'xxsmall'}></tk-spinner>;\n    if (this.loading) {\n      icon = spinnerElement;\n    } else if (this.icon) {\n      icon = <tk-icon {...getIconElementProps(this.icon, { class: 'tk-button-icon', variant: null })} />;\n    }\n\n    let Tag;\n    let props;\n\n    if (this.mode == 'link') {\n      Tag = 'a';\n      props = { href: this.href, target: this.target };\n    } else {\n      Tag = 'button';\n      props = { type: this.type };\n    }\n\n    let label;\n    if (this.label?.length > 0) {\n      label = <span>{this.label}</span>;\n    }\n\n    return (\n      <Host class={{ 'full-width': this.fullWidth }}>\n        <Tag class={rootClasses} {...props} disabled={this.disabled} onClick={e => this.handleClick(e)}>\n          {icon}\n          {label}\n        </Tag>\n      </Host>\n    );\n  }\n}\n"],"version":3}