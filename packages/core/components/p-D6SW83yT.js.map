{"file":"p-D6SW83yT.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-tooltip/tk-tooltip.scss?tag=tk-tooltip&encapsulation=shadow","src/components/tk-tooltip/tk-tooltip.tsx"],"sourcesContent":[".tk-tooltip {\n  display: flex;\n}\n\n.tk-tooltip-content {\n  display: flex;\n  gap: 8px;\n  position: fixed;\n  color: var(--static-white);\n  padding: var(--tooltips-base-v-padding) var(--tooltips-base-h-padding);\n  border-radius: var(--tooltips-base-radius, 8px);\n  pointer-events: none;\n  width: max-content;\n  max-width: 300px;\n  z-index: 1300;\n\n  &.tk-tooltip-dark {\n    background: var(--background-darkest);\n    line-height: 20px;\n    border: 1px solid var(--border-dark);\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-lightest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-sub-base);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background: var(--background-darkest);\n    }\n  }\n\n  &.tk-tooltip-white {\n    border: 1px solid var(--border-light);\n    background: var(--background-lightest);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background: var(--background-lightest);\n    }\n  }\n\n  &.tk-tooltip-info {\n    border: 1px solid var(--states-info-light);\n    background-color: var(--states-info-lightest);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background-color: var(--states-info-lightest);\n    }\n  }\n\n  &.tk-tooltip-success {\n    border: 1px solid var(--states-success-light);\n    background-color: var(--states-success-lightest);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background-color: var(--states-success-lightest);\n    }\n  }\n\n  &.tk-tooltip-danger {\n    border: 1px solid var(--states-danger-light);\n    background-color: var(--states-danger-lightest);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background-color: var(--states-danger-lightest);\n    }\n  }\n\n  &.tk-tooltip-warning {\n    border: 1px solid var(--states-warning-light);\n    background-color: var(--states-warning-lightest);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background-color: var(--states-warning-lightest);\n    }\n  }\n\n  &.tk-tooltip-neutral {\n    border: 1px solid var(--states-light);\n    background-color: var(--background-light);\n    line-height: 20px;\n\n    .tk-tooltip-header {\n      text-align: left;\n      color: var(--text-darkest);\n      font-size: var(--desktop-body-s-size);\n      font-style: normal;\n      font-weight: 400;\n    }\n\n    .tk-tooltip-description {\n      color: var(--text-dark);\n      font-weight: 300;\n      font-size: var(--desktop-body-xs-size);\n    }\n\n    .tk-tooltip-arrow {\n      background-color: var(--background-light);\n    }\n  }\n}\n\n.tk-tooltip-arrow {\n  position: absolute;\n  width: 9px;\n  height: 9px;\n  background: inherit;\n  border: 1px solid;\n  border-color: inherit;\n  transform: rotate(45deg);\n  z-index: 1300;\n}\n","import { Component, ComponentInterface, h, Prop, State, Element, Watch, Fragment } from '@stencil/core';\nimport { computePosition, offset, flip, shift, arrow, autoUpdate } from '@floating-ui/dom';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\nimport { getIconElementProps } from '../../utils/icon-props';\nimport classNames from 'classnames';\n\n/**\n * The TkTooltip is used to display additional information when element is hovered over.\n * @slot trigger - The trigger slot defines the element that will trigger the tooltip\n * @slot content - Define custom HTML content for the tooltip, which replaces the default header, description and icon elements\n * @react `import { TkTooltip } from '@takeoff-ui/react'`\n * @vue `import { TkTooltip } from '@takeoff-ui/vue'`\n * @angular `import { TkTooltip } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-tooltip',\n  styleUrl: 'tk-tooltip.scss',\n  shadow: true,\n})\nexport class TkTooltip implements ComponentInterface {\n  private tooltipElement: HTMLElement;\n  private triggerElement: HTMLElement;\n  private arrowElement: HTMLElement;\n  private cleanup;\n\n  @Element() el: HTMLTkTooltipElement;\n\n  @State() isOpen: boolean = false;\n\n  /**\n   * Controls if tooltip has custom content.\n   * @defaultValue false\n   */\n  @State() hasContentSlot: boolean = false;\n\n  /**\n   * Sets header text for the tooltip.\n   */\n  @Prop() header?: string;\n\n  /**\n   * Sets description text for the tooltip.\n   */\n  @Prop() description?: string;\n\n  /**\n   * Sets the position of the tooltip.\n   * @defaultValue 'right'\n   */\n  @Prop() position?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end' =\n    'right';\n\n  @Watch('position')\n  positionChanged() {\n    if (this.tooltipElement) {\n      this.updateArrowPosition();\n    }\n  }\n  /**\n   * Sets the color variant of the tooltip.\n   * @defaultValue 'neutral'\n   */\n  @Prop() variant?: 'dark' | 'white' | 'info' | 'success' | 'warning' | 'danger' | 'neutral' = 'neutral';\n\n  /**\n   * Sets the icon element of the tooltip.\n   */\n  @Prop() icon?: string | IIconOptions;\n\n  /**\n   * The style attribute of container element\n   */\n  @Prop() containerStyle?: any = null;\n\n  componentWillLoad() {\n    this.hasContentSlot = !!this.el.querySelector('[slot=\"content\"]');\n  }\n\n  componentDidLoad() {\n    this.triggerElement = this.el.querySelector('[slot=\"trigger\"]');\n\n    this.triggerElement?.addEventListener('mouseenter', this.handleMouseEnter);\n    this.triggerElement?.addEventListener('mouseleave', this.handleMouseLeave);\n  }\n\n  componentDidUpdate() {\n    if (this.isOpen) {\n      this.cleanup = autoUpdate(this.triggerElement, this.tooltipElement, () => this.updatePosition(), {\n        animationFrame: true,\n      });\n    } else {\n      this.cleanup && this.cleanup();\n    }\n  }\n\n  private updatePosition() {\n    computePosition(this.triggerElement, this.tooltipElement, {\n      strategy: 'fixed',\n      placement: this.position,\n      middleware: [offset(8), flip(), shift(), arrow({ element: this.arrowElement })],\n    }).then(({ x, y, middlewareData, placement }) => {\n      Object.assign(this.tooltipElement.style, {\n        left: `${x}px`,\n        top: `${y}px`,\n      });\n\n      const { x: arrowX, y: arrowY } = middlewareData.arrow;\n      Object.assign(this.arrowElement.style, {\n        left: arrowX != null ? `${arrowX}px` : '',\n        top: arrowY != null ? `${arrowY}px` : '',\n      });\n\n      const [side] = placement.split('-');\n      this.updateArrowPosition(side);\n    });\n  }\n\n  private updateArrowPosition(side?: string) {\n    const arrowElement = this.arrowElement;\n    switch (side) {\n      case 'top':\n        arrowElement.style.bottom = '-5px';\n        arrowElement.style.borderTop = 'none';\n        arrowElement.style.borderLeft = 'none';\n        break;\n      case 'bottom':\n        arrowElement.style.top = '-5px';\n        arrowElement.style.borderBottom = 'none';\n        arrowElement.style.borderRight = 'none';\n\n        break;\n      case 'left':\n        arrowElement.style.right = '-5px';\n        arrowElement.style.borderBottom = 'none';\n        arrowElement.style.borderLeft = 'none';\n        break;\n      case 'right':\n        arrowElement.style.left = '-5px';\n        arrowElement.style.borderTop = 'none';\n        arrowElement.style.borderRight = 'none';\n        break;\n    }\n  }\n\n  private handleMouseEnter = () => {\n    this.isOpen = true;\n  };\n\n  private handleMouseLeave = () => {\n    this.isOpen = false;\n  };\n\n  render() {\n    let _icon: HTMLTkIconElement;\n    let iconVariant;\n\n    if (this.variant == 'dark') iconVariant = 'neutral';\n    else iconVariant = this.variant;\n\n    _icon = <tk-icon {...getIconElementProps(this.icon, { class: classNames('tk-tooltip-item-icon'), variant: iconVariant, sign: true, size: 'small' })} />;\n\n    return (\n      <div class=\"tk-tooltip\">\n        <slot name=\"trigger\" />\n\n        {this.isOpen && (\n          <div\n            ref={el => (this.tooltipElement = el as HTMLElement)}\n            class={{\n              'tk-tooltip-content': true,\n              [`tk-tooltip-${this.variant}`]: !!this.variant,\n            }}\n            style={{ ...this.containerStyle }}\n            role=\"tooltip\"\n          >\n            {this.hasContentSlot ? (\n              <slot name=\"content\" />\n            ) : (\n              <Fragment>\n                {_icon}\n                <div>\n                  <div class=\"tk-tooltip-header\">{this.header}</div>\n                  <div class=\"tk-tooltip-description\">{this.description}</div>\n                </div>\n              </Fragment>\n            )}\n            <div ref={el => (this.arrowElement = el as HTMLElement)} class=\"tk-tooltip-arrow\"></div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}