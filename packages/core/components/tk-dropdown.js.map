{"file":"tk-dropdown.js","mappings":"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","names":["TkDropdown","__stencil_proxyCustomElement","HTMLElement","uuidv4"],"sources":["src/components/tk-dropdown/tk-dropdown.scss?tag=tk-dropdown","src/components/tk-dropdown/tk-dropdown.tsx"],"sourcesContent":["tk-dropdown {\n  display: inline-block;\n}\n\n.tk-dropdown-container {\n  position: relative;\n\n  .tk-dropdown-panel {\n    position: absolute;\n    top: 0;\n    left: 0;\n    z-index: 800;\n    width: max-content;\n    max-height: 300px;\n    overflow-y: auto;\n    border-radius: 16px;\n    border: 1px solid var(--border-light);\n    background: var(--static-light);\n    box-shadow: var(--effect-1-default-sm);\n\n    .tk-dropdown-item-holder {\n      margin: 8px;\n\n      .tk-dropdown-group-label {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        color: var(--text-dark);\n        font-size: var(--desktop-body-xs-size);\n        padding: 0px 8px;\n\n        label {\n          white-space: nowrap;\n        }\n\n        .line {\n          width: 100%;\n          height: 1px;\n          background-color: var(--background-light);\n        }\n      }\n\n      .tk-dropdown-item {\n        color: var(--text-darkest);\n        border-radius: 8px;\n        padding: var(--dropdown-items-basic-base-v-padding) var(--dropdown-items-basic-base-h-padding, 8px);\n\n        &.left {\n          text-align: left;\n        }\n\n        &.center {\n          text-align: center;\n        }\n\n        &.right {\n          text-align: right;\n        }\n\n        &:hover,\n        &[data-active='true'] {\n          cursor: pointer;\n          background: var(--background-lightest);\n        }\n\n        &.disabled {\n          color: var(--text-dark);\n          pointer-events: none;\n        }\n      }\n    }\n  }\n\n  &.large {\n    .tk-dropdown-item-holder {\n      .tk-dropdown-item {\n        font-size: var(--desktop-body-m-base-size);\n      }\n    }\n  }\n\n  &.base {\n    .tk-dropdown-item-holder {\n      .tk-dropdown-item {\n        font-size: var(--desktop-body-s-size);\n      }\n    }\n  }\n\n  &.small {\n    .tk-dropdown-item-holder {\n      .tk-dropdown-item {\n        font-size: var(--desktop-body-xs-size);\n      }\n    }\n  }\n}\n","import { Component, ComponentInterface, Element, Prop, State, Event, EventEmitter, h } from '@stencil/core';\nimport { computePosition, offset, flip, shift, autoUpdate } from '@floating-ui/dom';\nimport { v4 as uuidv4 } from 'uuid';\nimport classNames from 'classnames';\n\n/**\n * TkDropdown creates a dropdown with a trigger element. Items in the options prop can be listed and templated.\n * @slot trigger - The trigger slot defines the element that will trigger the dropdown\n * @slot empty-data - Set how the dropdown will appear when there is no data\n * @react `import { TkDropdown } from '@takeoff-ui/react'`\n * @vue `import { TkDropdown } from '@takeoff-ui/vue'`\n * @angular `import { TkDropdown } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-dropdown',\n  styleUrl: 'tk-dropdown.scss',\n})\nexport class TkDropdown implements ComponentInterface {\n  private hasEmptyDataSlot: boolean = false;\n  private uniqueId: string;\n  private triggerRef?: HTMLElement;\n  private panelRef?: HTMLDivElement;\n  private windowClickHandler: (event: MouseEvent) => void;\n  private cleanup;\n\n  @Element() el: HTMLTkDropdownElement;\n\n  constructor() {\n    this.uniqueId = uuidv4();\n    this.windowClickHandler = this.handleWindowClick.bind(this);\n  }\n\n  @State() isOpen: boolean = false;\n\n  /**\n   * The disabled status.\n   * @defaultValue false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * The message to display when there is no data available.\n   */\n  @Prop() emptyMessage: string = 'No options available';\n\n  /**\n   * Provides a function to customize the options.\n   */\n  @Prop() optionHtml: Function;\n\n  /**\n   * The key to use for option labels\n   * @defaultValue label\n   */\n  @Prop() optionLabelKey: string = 'label';\n\n  /**\n   * The key to use for option values\n   * @defaultValue value\n   */\n  @Prop() optionValueKey: string = 'value';\n\n  /**\n   * The key to use for group names when options are grouped\n   * @defaultValue groupName\n   */\n  @Prop() groupNameKey: string = 'groupName';\n\n  /**\n   * The key to use for grouped options array\n   * @defaultValue options\n   */\n  @Prop() groupOptionsKey: string = 'options';\n\n  /**\n   * The list of options to be displayed in the select box.\n   */\n  @Prop() options: any[];\n\n  /**\n   * Indicates the alignment of options.\n   * @defaultValue left\n   */\n  @Prop() optionsAlign: 'left' | 'center' | 'right' = 'left';\n\n  /**\n   * Sets the position of the tooltip.\n   * @defaultValue 'right'\n   */\n  @Prop() position?: 'top' | 'top-start' | 'top-end' | 'bottom' | 'bottom-start' | 'bottom-end' | 'left' | 'left-start' | 'left-end' | 'right' | 'right-start' | 'right-end' =\n    'bottom';\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'tk-item-click' }) tkItemClick!: EventEmitter<any>;\n\n  componentWillLoad() {\n    this.hasEmptyDataSlot = !!this.el.querySelector('[slot=\"empty-data\"]');\n\n    this.triggerRef = this.el.querySelector('[slot=\"trigger\"]');\n    if (this.triggerRef && !this.disabled) {\n      this.triggerRef.style.cursor = 'pointer';\n      this.triggerRef.addEventListener('click', () => {\n        this.isOpen = !this.isOpen;\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    if (this.isOpen) {\n      this.cleanup = autoUpdate(this.triggerRef, this.panelRef, () => this.updatePosition(), {\n        animationFrame: true,\n      });\n      this.bindWindowClickListener();\n    } else {\n      this.cleanup && this.cleanup();\n      this.unbindWindowClickListener();\n    }\n  }\n\n  disconnectedCallback() {\n    this.unbindWindowClickListener();\n  }\n\n  private updatePosition() {\n    if (this.triggerRef && this.panelRef) {\n      computePosition(this.triggerRef, this.panelRef, {\n        placement: this.position,\n        middleware: [offset(4), flip(), shift({ padding: 5 })],\n      }).then(({ x, y }) => {\n        Object.assign(this.panelRef.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n      });\n    }\n  }\n\n  private isGrouped(): boolean {\n    return this.options?.length > 0 && this.options[0].hasOwnProperty(this.groupNameKey);\n  }\n\n  private getOptionLabel(item: any): string {\n    return typeof item === 'object' ? item[this.optionLabelKey] : item;\n  }\n\n  private bindWindowClickListener() {\n    window.addEventListener('click', this.windowClickHandler);\n  }\n\n  private unbindWindowClickListener() {\n    window.removeEventListener('click', this.windowClickHandler);\n  }\n\n  private handleWindowClick(event: MouseEvent) {\n    const isInnerClicked = event.composedPath().some(item => item == this.el);\n    if (!isInnerClicked) {\n      this.isOpen = false;\n      this.unbindWindowClickListener();\n    }\n  }\n\n  private handleItemClick(item) {\n    this.isOpen = false;\n    this.tkItemClick.emit(item);\n  }\n\n  private createOptionItem(options: any[]) {\n    return options?.map((item, index) => {\n      let optionItem;\n      if (this.optionHtml != undefined) {\n        optionItem = this.optionHtml(item);\n      } else {\n        optionItem = this.getOptionLabel(item);\n      }\n      return (\n        <div\n          class={classNames('tk-dropdown-item', this.optionsAlign, { disabled: item?.disabled })}\n          data-option-index={index}\n          data-active={index == 0 ? 'true' : 'false'}\n          onClick={() => this.handleItemClick(item)}\n          innerHTML={optionItem}\n        ></div>\n      );\n    });\n  }\n\n  private createOptions() {\n    if (this.isGrouped()) {\n      return this.options?.map(group => {\n        return (\n          <div class=\"tk-dropdown-group\">\n            <div class=\"tk-dropdown-group-label\">\n              <label>{group[this.groupNameKey]}</label>\n              <div class=\"line\"></div>\n            </div>\n            {this.createOptionItem(group[this.groupOptionsKey])}\n          </div>\n        );\n      });\n    } else {\n      return this.createOptionItem(this.options);\n    }\n  }\n\n  private renderDropdown() {\n    if (!this.isOpen) return null;\n\n    return (\n      <div class=\"tk-dropdown-panel\" ref={el => (this.panelRef = el as HTMLDivElement)} data-tk-dropdown-id={this.uniqueId}>\n        <div class=\"tk-dropdown-item-holder\">{this.options?.length > 0 ? this.createOptions() : this.hasEmptyDataSlot ? <slot name=\"empty-data\"></slot> : this.emptyMessage}</div>\n      </div>\n    );\n  }\n\n  render() {\n    const rootClasses = classNames('tk-dropdown-container');\n\n    return (\n      <div class={rootClasses} data-tk-dropdown-id={this.uniqueId}>\n        <slot name=\"trigger\"></slot>\n        {this.renderDropdown()}\n      </div>\n    );\n  }\n}\n"],"version":3}