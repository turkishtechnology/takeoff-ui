{"file":"p-jrcAclfE.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement","uuidv4"],"sources":["src/components/tk-select/tk-select.scss?tag=tk-select","src/components/tk-select/tk-select.tsx"],"sourcesContent":["tk-select {\n  display: block;\n}\n\n.tk-select-container {\n  .tk-select-panel {\n    position: fixed;\n    max-height: 320px;\n    overflow-y: auto;\n    border-radius: 16px;\n    border: 1px solid var(--border-light);\n    background: var(--static-light);\n    z-index: 800;\n    box-shadow: var(--effect-1-default-sm);\n\n    .dropdown-item-holder {\n      margin: 8px;\n\n      .dropdown-group-label {\n        display: flex;\n        align-items: center;\n        gap: 16px;\n        color: var(--text-dark);\n        font-size: var(--desktop-body-xs-size);\n        padding: 0px 8px;\n\n        label {\n          white-space: nowrap;\n        }\n\n        .line {\n          width: 100%;\n          height: 1px;\n          background-color: var(--background-light);\n        }\n      }\n\n      .dropdown-item {\n        color: var(--text-darkest);\n        border-radius: 8px;\n        padding: var(--dropdown-items-basic-base-v-padding) var(--dropdown-items-basic-base-h-padding, 8px);\n\n        &.multiple {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        &:hover {\n          cursor: pointer;\n          background: var(--background-lightest);\n        }\n        &[data-active='true'] {\n          cursor: pointer;\n          background: var(--background-light);\n        }\n        &[data-selected='true'] {\n          cursor: pointer;\n          background: var(--states-info-light);\n        }\n      }\n    }\n\n    &::-webkit-scrollbar {\n      width: 6px;\n      background: var(--background-lightest);\n      opacity: 1;\n    }\n\n    &::-webkit-scrollbar-track {\n      border-radius: 2px;\n      background: var(--background-lightest);\n      opacity: 1;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      border-radius: 3px;\n      background: var(--secondary-sub-base);\n      opacity: 1;\n    }\n  }\n\n  &.large {\n    .dropdown-item-holder {\n      .dropdown-item {\n        font-size: var(--desktop-body-m-base-size);\n      }\n    }\n  }\n\n  &.base {\n    .dropdown-item-holder {\n      .dropdown-item {\n        font-size: var(--desktop-body-s-size);\n      }\n    }\n  }\n\n  &.small {\n    .dropdown-item-holder {\n      .dropdown-item {\n        font-size: var(--desktop-body-xs-size);\n      }\n    }\n  }\n}\n","import { AttachInternals, Component, ComponentInterface, Element, Event, EventEmitter, Fragment, Prop, State, Watch, h } from '@stencil/core';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\nimport { computePosition, flip, shift, offset, size, autoUpdate } from '@floating-ui/dom';\nimport _ from 'lodash';\nimport { IChipOptions } from '../tk-chips/interfaces';\n\n/**\n * TkSelect component description.\n * @slot empty-data - Set how the dropdown will appear when there is no data\n * @react `import { TkSelect } from '@takeoff-ui/react'`\n * @vue `import { TkSelect } from '@takeoff-ui/vue'`\n * @angular `import { TkSelect } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-select',\n  styleUrl: 'tk-select.scss',\n  formAssociated: true,\n})\nexport class TkSelect implements ComponentInterface {\n  private hasEmptyDataSlot: boolean = false;\n  private selectedItem: any;\n  private inputRef?: HTMLTkInputElement;\n  private nativeInputRef?: HTMLInputElement;\n  private panelRef?: HTMLDivElement;\n  private dialogRef?: HTMLTkDialogElement;\n  private uniqueId: string;\n  private filterDebounceTimeout;\n  private windowClickHandler: (event: MouseEvent) => void;\n  private boundRunFilterForMultiple: (event: Event) => void;\n  private cleanup;\n  private isItemClickFlag = false;\n\n  @Element() el!: HTMLTkSelectElement;\n\n  @AttachInternals() internals: ElementInternals;\n\n  constructor() {\n    this.uniqueId = uuidv4();\n    this.windowClickHandler = this.handleWindowClick.bind(this);\n    this.boundRunFilterForMultiple = this.runFilterForMultiple.bind(this);\n  }\n\n  @State() hasFocus = false;\n  @State() renderOptions: any[];\n  @State() isOpen: boolean = false;\n\n  /**\n   * The key to use for option group names.\n   * Required if grouped options are used.\n   */\n  @Prop() groupNameKey: string = 'label';\n\n  /**\n   * The key to use for accessing grouped options array.\n   * Required if grouped options are used.\n   */\n  @Prop() groupOptionsKey: string = 'options';\n\n  /**\n   * Represents whether the options are fethecd from service or not.\n   * If true renders spinner in options dropdown.\n   */\n  @Prop() loading: boolean = false;\n\n  /**\n   * Enables users to enter custom values that are not part of the predefined options.\n   * @defaultValue false\n   */\n  @Prop() allowCustomValue: boolean = false;\n\n  /**\n   * Indicates whether the input can be cleared\n   * @defaultValue false\n   */\n  @Prop() clearable: boolean = false;\n\n  /**\n   * If `true`, the user cannot interact with the input.\n   * @defaultValue false\n   */\n  @Prop() disabled = false;\n\n  /**\n   * Determines the width of the dropdown. Accepts values like 'match-parent', 'auto', or a specific width in '300px'.\n   * @defaultValue match-parent\n   */\n  @Prop() dropdownWidthMode: 'match-parent' | 'auto' | string = 'match-parent';\n\n  /**\n   * This property determines whether the input field within the select box is editable.\n   * @defaultValue false\n   */\n  @Prop() editable: boolean = false;\n\n  /**\n   * This is the error message that will be displayed.\n   */\n  @Prop() error: string;\n\n  /**\n   * The message to display when there is no data available.\n   */\n  @Prop() emptyMessage: string = 'No options available';\n\n  /**\n   *  Function used to filter current options based on the input value. Comes with a default filter function, but can be overridden with a custom function.\n   */\n  @Prop() filter: Function = this.defaultFilter;\n\n  /**\n   * Sets the delay (in ms) before triggering the filter function.\n   */\n  @Prop() filterDebounceDelay: number = 0;\n\n  /**\n   * Provided a hint or additional information about the input.\n   */\n  @Prop() hint: string;\n\n  /**\n   * Indicates whether the input is in an invalid state\n   * @defaultValue false\n   */\n  @Prop() invalid: boolean = false;\n\n  /**\n   * Defines the label for the element.\n   */\n  @Prop() label: string;\n\n  /**\n   * If `true` the user can make multiple selections.\n   */\n  @Prop() multiple: boolean;\n\n  /**\n   * The name of the control, which is submitted with the form data.\n   */\n  @Prop() name: string;\n\n  /**\n   * Placeholder text displayed when the input is empty.\n   */\n  @Prop() placeholder?: string | null;\n\n  /**\n   * If `true`, the user cannot modify the value.\n   * @defaultValue false\n   */\n  @Prop() readonly: boolean = false;\n\n  /**\n   * Sets size for the component.\n   * @defaultValue base\n   */\n  @Prop() size: 'large' | 'base' | 'small' = 'base';\n\n  /**\n   * Displays a red asterisk (*) next to the label for visual emphasis.\n   */\n  @Prop() showAsterisk: boolean = false;\n\n  /**\n   * Sets options for all chips rendered in multiple selection mode.\n   */\n  @Prop() chipOptions: IChipOptions;\n  /**\n   * The list of options to be displayed in the select box.\n   */\n  @Prop() options: any[];\n  @Watch('options')\n  protected optionsChanged(newValue: any[], oldValue: any[]) {\n    if (_.isEqual(newValue, oldValue)) return;\n\n    this.renderOptions = this.options?.length > 0 ? [...this.options] : [];\n\n    this.setValue();\n  }\n\n  /**\n   * Provides a function to customize the options.\n   */\n  @Prop() optionHtml: Function;\n\n  /**\n   * The key to use for option labels\n   * @defaultValue label\n   */\n  @Prop() optionLabelKey: string = 'label';\n\n  /**\n   * The key to use for option values\n   * @defaultValue value\n   */\n  @Prop() optionValueKey: string;\n\n  /**\n   * The value of the input.\n   */\n  @Prop({ mutable: true }) value?: any | any[];\n\n  /**\n   * Update the native input element when the value changes\n   */\n  @Watch('value')\n  protected valueChanged(newValue: any, oldValue: any) {\n    if (_.isEqual(newValue, oldValue)) return;\n    this.setValue();\n  }\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'tk-change' }) tkChange!: EventEmitter<any>;\n\n  componentWillLoad(): void {\n    this.hasEmptyDataSlot = !!this.el.querySelector('[slot=\"empty-data\"]');\n\n    this.renderOptions = this.options?.length > 0 ? [...this.options] : [];\n  }\n\n  componentDidRender(): void {\n    // multiple durumda chips li input çalıştığı için ve tk-input value olarak chips leri geri döndürdüğü için\n    // tk-input'un içindeki inputa yazılan değerlerin filtering için çalışabilmesini sağlamak için yapılmıştır.\n    if (this.multiple && this.editable) {\n      this.nativeInputRef?.removeEventListener('input', this.boundRunFilterForMultiple);\n      this.nativeInputRef?.addEventListener('input', this.boundRunFilterForMultiple);\n    }\n  }\n\n  componentDidLoad(): void {\n    this.internals?.form?.addEventListener('reset', () => {\n      this.handleFormReset();\n    });\n\n    this.nativeInputRef = this.inputRef.querySelector('input');\n\n    // dialog içerisindek kullanıldığında dialog içerisinde scroll olduğunda panelin kapanması için yapıldı.\n    this.dialogRef = this.el.closest('tk-dialog');\n    this.dialogRef?.querySelector('.tk-dialog-content')?.addEventListener('scroll', this.handleDialogScroll.bind(this));\n\n    if (this.allowCustomValue) {\n      this.editable = true;\n    }\n\n    if (this.value) {\n      this.setValue();\n    }\n  }\n\n  componentDidUpdate() {\n    this.nativeInputRef = this.inputRef.querySelector('input');\n\n    if (this.isOpen) {\n      if (this.inputRef && this.panelRef) {\n        this.cleanup = autoUpdate(this.inputRef.querySelector('.tk-input'), this.panelRef, () => this.updatePosition(), {\n          animationFrame: true,\n        });\n      }\n      this.bindWindowClickListener();\n    } else {\n      this.panelRef?.remove();\n      this.cleanup && this.cleanup();\n      this.unbindWindowClickListener();\n    }\n  }\n\n  private isGrouped(): boolean {\n    return this.options?.length > 0 && this.options[0]?.[this.groupOptionsKey];\n  }\n\n  disconnectedCallback() {\n    this.internals?.form?.removeEventListener('reset', this.handleFormReset.bind(this));\n    this.unbindWindowClickListener();\n    this.dialogRef?.querySelector('.tk-dialog-content')?.removeEventListener('scroll', this.handleDialogScroll.bind(this));\n  }\n\n  formResetCallback() {\n    this.handleFormReset();\n  }\n\n  private async runFilterForMultiple() {\n    this.renderOptions = await this.filter(this.nativeInputRef.value, this.options);\n  }\n\n  private async defaultFilter(text: string, options: any[]) {\n    if (!text) {\n      return [...this.options];\n    }\n    return options.filter(item => this.getOptionLabel(item).toLowerCase().indexOf(text.toLowerCase()) > -1);\n  }\n\n  private updatePosition() {\n    const tkInputRootEl = this.inputRef.querySelector('.tk-input');\n    const dropdownWidthMode = this.dropdownWidthMode;\n\n    if (tkInputRootEl && this.panelRef) {\n      computePosition(tkInputRootEl, this.panelRef, {\n        strategy: 'fixed',\n        placement: 'bottom-start',\n        middleware: [\n          offset(4),\n          flip(),\n          shift({ padding: 5 }),\n          size({\n            apply({ rects, elements }) {\n              if (dropdownWidthMode === 'match-parent') {\n                Object.assign(elements.floating.style, {\n                  width: `${rects.reference.width}px`,\n                });\n              } else if (dropdownWidthMode !== 'auto' && dropdownWidthMode.length > 0) {\n                Object.assign(elements.floating.style, {\n                  width: dropdownWidthMode,\n                });\n              }\n            },\n          }),\n        ],\n      }).then(({ x, y }) => {\n        Object.assign(this.panelRef.style, {\n          left: `${x}px`,\n          top: `${y}px`,\n        });\n      });\n    }\n  }\n\n  private getOptionLabel(item: any): string {\n    return typeof item === 'object' ? this.getNestedValue(item, this.optionLabelKey) : item;\n  }\n\n  private getOptionValue(item: any): any {\n    if (typeof item === 'object') {\n      if (this.optionValueKey?.length > 0) {\n        return this.getNestedValue(item, this.optionValueKey);\n      } else {\n        return item;\n      }\n    } else {\n      return item;\n    }\n  }\n\n  private async setRenderOptions(value) {\n    if (this.isGrouped()) {\n      this.renderOptions = this.options\n        .map(group => ({\n          ...group,\n          [this.groupOptionsKey]: group[this.groupOptionsKey].filter(option =>\n            this.getOptionLabel(option)\n              .toLowerCase()\n              .includes(value?.toLowerCase() || ''),\n          ),\n        }))\n        .filter(group => group[this.groupOptionsKey].length > 0);\n    } else {\n      this.renderOptions = await this.filter(value, this.options);\n    }\n  }\n\n  private getSelectedItem() {\n    if (this.renderOptions?.length > 0) {\n      if (typeof this.value != 'object' && this.renderOptions?.every(item => typeof item != 'object')) {\n        // value ve her bir option object değilse. Yani bu primitive tiplerle çalışan bir selectbox ise\n\n        return this.renderOptions.find(item => item == this.value);\n      } else if (this.renderOptions?.every(item => typeof item === 'object')) {\n        if (this.optionValueKey?.length > 0) {\n          return this.renderOptions.find(item => this.getOptionValue(item) == this.value);\n        } else {\n          return this.renderOptions.find(item => _.isEqual(item, this.value));\n        }\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  private setValue() {\n    if (!this.inputRef) return;\n    let innerOptions = [];\n\n    if (this.isGrouped()) {\n      innerOptions = this.options.flatMap(group => group[this.groupOptionsKey]);\n    } else {\n      innerOptions = this.options;\n    }\n\n    // Handle multiple selection case\n    if (this.multiple) {\n      // Ensure value is always an array\n      const currentValue = Array.isArray(this.value) ? this.value : [];\n\n      this.selectedItem = currentValue\n        .map(val => {\n          let found;\n          if (this.optionValueKey) {\n            found = innerOptions.find(opt => this.getOptionValue(opt) === val);\n          } else {\n            found = innerOptions.find(opt => _.isEqual(opt, val));\n          }\n          if (found !== undefined) return found;\n          if (this.allowCustomValue) return val;\n          return null;\n        })\n        .filter(val => val !== null && val !== undefined);\n      this.inputRef.value = this.selectedItem;\n      return;\n    }\n\n    // Handle single selection case\n    if (this.editable && this.allowCustomValue) {\n      // For editable with custom values, show the value directly\n      this.inputRef.value = this.value ? this.getOptionLabel(this.value) : null;\n      return;\n    }\n\n    // Find the selected item based on value type\n    if (typeof this.value !== 'object' && innerOptions.every(item => typeof item !== 'object')) {\n      // Handle primitive values\n      this.selectedItem = innerOptions.find(item => item === this.value);\n    } else if (this.optionValueKey?.length > 0) {\n      // Handle object values with optionValueKey\n      this.selectedItem = innerOptions.find(item => this.getOptionValue(item) === this.value);\n    } else {\n      // Handle object values without optionValueKey\n      this.selectedItem = innerOptions.find(item => _.isEqual(item, this.value));\n    }\n\n    // Set input value based on selection state\n    if (this.selectedItem) {\n      this.inputRef.value = this.selectedItem;\n    } else {\n      this.inputRef.value = null;\n    }\n  }\n\n  private getNestedValue(obj, path) {\n    return path.split('.').reduce((acc, key) => {\n      return acc && acc[key] !== undefined ? acc[key] : undefined;\n    }, obj);\n  }\n\n  private scrollItem(item: HTMLDivElement) {\n    item.scrollIntoView({\n      behavior: 'smooth',\n      block: 'nearest',\n    });\n  }\n\n  private bindWindowClickListener() {\n    window.addEventListener('click', this.windowClickHandler);\n  }\n\n  private unbindWindowClickListener() {\n    window.removeEventListener('click', this.windowClickHandler);\n  }\n\n  // dialog contentindeki scroll'u dinleyip scroll olduğunda panelin kapanması için yapıldı\n  private handleDialogScroll() {\n    if (this.isOpen) {\n      this.isOpen = false;\n    }\n  }\n\n  private handleFormReset() {\n    this.value = null;\n    this.tkChange.emit(null);\n  }\n\n  private handleWindowClick(event: MouseEvent) {\n    const isInnerClicked = event.composedPath().some(item => item == this.el);\n    if (!isInnerClicked) {\n      this.isOpen = false;\n      this.unbindWindowClickListener();\n    }\n  }\n\n  private async handleItemClick(item) {\n    this.isItemClickFlag = true;\n    if (this.multiple) {\n      let tmpValue = Array.isArray(this.value) ? [...this.value] : [];\n      const tmpItem = this.getOptionValue(item);\n\n      if (_.some(tmpValue, itemValue => _.isEqual(itemValue, this.getOptionValue(tmpItem)))) {\n        // tıklanan item zaten seçili ise seçimi kaldırır\n        _.remove(tmpValue, itemValue => _.isEqual(itemValue, tmpItem));\n      } else {\n        // tıklanan item seçili değilse ekler\n        tmpValue.push(tmpItem);\n      }\n\n      // filtreleme ardında yapılan seçimden sonra filtrelem için kullandığımız tk-input içerisindeki native inputu temizleme işlemi\n      if (this.multiple && this.editable) {\n        this.nativeInputRef.value = null;\n        this.renderOptions = await this.filter(null, this.options);\n      }\n\n      this.inputRef.value = [...tmpValue];\n      this.value = [...tmpValue];\n      this.tkChange.emit([...tmpValue]);\n    } else {\n      this.value = this.getOptionValue(item);\n      this.tkChange.emit(this.getOptionValue(item));\n      this.isOpen = false;\n    }\n  }\n\n  private async handleInputChange(value) {\n    if (this.multiple) {\n      if (value == null) {\n        this.value = [];\n      } else {\n        const resolvedValues = (Array.isArray(value) ? value : [value]).map(val => {\n          if (typeof val === 'object' && val !== null && this.optionValueKey) {\n            return this.getOptionValue(val);\n          }\n          return val;\n        });\n        this.value = resolvedValues;\n      }\n      this.tkChange.emit(this.value);\n    } else {\n      // this.isOpen = true;\n\n      if (this.editable && this.allowCustomValue) {\n        this.value = value;\n        this.tkChange.emit(value);\n      }\n\n      // hızlıca inputda arama yapılırsa verilen filterDebounceDelay süresi içinde\n      // tekrar inputda değişiklik yapılırsa sadece bir defa filtre fonksiyonu çalıştırma için yapıldı.\n      if (this.filterDebounceDelay > 0) {\n        clearTimeout(this.filterDebounceTimeout);\n        this.filterDebounceTimeout = setTimeout(async () => {\n          await this.setRenderOptions(value);\n        }, this.filterDebounceDelay);\n      } else {\n        await this.setRenderOptions(value);\n      }\n    }\n  }\n\n  private handleInputClick() {\n    if (!this.isOpen && !this.disabled) {\n      this.hasFocus = true;\n      this.isOpen = true;\n      this.bindWindowClickListener();\n    }\n  }\n\n  private async handleInputBlur() {\n    if (this.multiple) return;\n\n    if (this.editable && !this.allowCustomValue) {\n      const selectedItem = this.getSelectedItem();\n      const inputValue = this.nativeInputRef.value;\n\n      if (!inputValue) return;\n\n      // custom value'ya izin verilmiyor ise inputu boşalt\n      if (\n        !this.isItemClickFlag &&\n        // seçili item yok ise ama inutda bir değer var ise\n        ((!selectedItem && inputValue) ||\n          // seçili item var ise ama inputta yazar değer seçili item ile uyuşmuyor ise\n          (selectedItem && this.getOptionLabel(selectedItem) != inputValue))\n      ) {\n        this.value = null;\n        this.tkChange.emit(null);\n        this.renderOptions = await this.filter(null, this.options);\n      } else {\n        this.isItemClickFlag = false;\n      }\n    }\n  }\n\n  private async handleInputKeydown(e) {\n    if (e.key == 'ArrowDown') {\n      const activeItem: HTMLDivElement = this.el.querySelector('.dropdown-item[data-active=\"true\"]');\n      const activeIndex = Number(activeItem?.getAttribute('data-option-index'));\n      if (activeItem) {\n        const newActiveItem: HTMLDivElement = this.el.querySelector(`.dropdown-item[data-option-index='${activeIndex + 1}']`);\n        if (newActiveItem) {\n          activeItem.setAttribute('data-active', 'false');\n          newActiveItem.setAttribute('data-active', 'true');\n          this.scrollItem(newActiveItem);\n        }\n      } else {\n        const newActiveItem: HTMLDivElement = this.el.querySelector(`.dropdown-item[data-option-index='0']`);\n        if (newActiveItem) {\n          newActiveItem.setAttribute('data-active', 'true');\n          this.scrollItem(newActiveItem);\n        }\n      }\n    } else if (e.key == 'ArrowUp') {\n      const activeItem: HTMLDivElement = this.el.querySelector('.dropdown-item[data-active=\"true\"]');\n      const activeIndex = Number(activeItem?.getAttribute('data-option-index'));\n      if (activeItem) {\n        const newActiveItem: HTMLDivElement = this.el.querySelector(`.dropdown-item[data-option-index='${activeIndex - 1}']`);\n        if (newActiveItem) {\n          activeItem.setAttribute('data-active', 'false');\n          newActiveItem.setAttribute('data-active', 'true');\n          this.scrollItem(newActiveItem);\n        }\n      } else {\n        const newActiveItem: HTMLDivElement = this.el.querySelector(`.dropdown-item[data-option-index='0']`);\n        if (newActiveItem) {\n          newActiveItem.setAttribute('data-active', 'true');\n          this.scrollItem(newActiveItem);\n        }\n      }\n    } else if (e.key == 'Enter') {\n      const activeItem: HTMLDivElement = this.el.querySelector('.dropdown-item[data-active=\"true\"]');\n      if (this.multiple && this.editable && this.allowCustomValue) {\n        this.nativeInputRef.dispatchEvent(new InputEvent('input', { bubbles: true }));\n      }\n      activeItem?.click();\n    } else if (e.key == 'Tab') {\n      this.hasFocus = false;\n      this.isOpen = false;\n    }\n  }\n\n  private handleInputClearClick() {\n    this.value = null;\n    this.tkChange.emit(null);\n  }\n\n  private createOptionItem(options: any[]) {\n    return options?.map((item, index) => {\n      let itemProps = {};\n      let children;\n      let checking = _.some(this.value, itemValue => _.isEqual(itemValue, this.getOptionValue(item)));\n      if (this.multiple) {\n        if (this.optionHtml != undefined) {\n          children = (\n            <Fragment>\n              <tk-checkbox value={checking} onTk-change={e => e.stopPropagation()} onClick={e => e.preventDefault()}></tk-checkbox>\n              <div innerHTML={this.optionHtml(item)}></div>\n            </Fragment>\n          );\n        } else {\n          children = (\n            <Fragment>\n              <tk-checkbox value={checking} onTk-change={e => e.stopPropagation()} onClick={e => e.preventDefault()}></tk-checkbox>\n              <div>{this.getOptionLabel(item)}</div>\n            </Fragment>\n          );\n        }\n      } else {\n        if (this.optionHtml != undefined) {\n          itemProps = { innerHTML: this.optionHtml(item) };\n        } else {\n          itemProps = { innerHTML: this.getOptionLabel(item) };\n        }\n      }\n\n      return (\n        <div\n          class={classNames('dropdown-item', { multiple: this.multiple })}\n          data-option-index={index}\n          data-selected={this.multiple && checking ? 'true' : this.value == item ? 'true' : 'false'}\n          onClick={() => this.handleItemClick(item)}\n          {...itemProps}\n        >\n          {children}\n        </div>\n      );\n    });\n  }\n\n  private createOptions() {\n    if (this.isGrouped()) {\n      return this.renderOptions.map(group => (\n        <div class=\"dropdown-group\">\n          <div class=\"dropdown-group-label\">\n            <label>{group[this.groupNameKey]}</label>\n            <div class=\"line\"></div>\n          </div>\n          {this.createOptionItem(group[this.groupOptionsKey])}\n        </div>\n      ));\n    } else {\n      return this.createOptionItem(this.renderOptions);\n    }\n  }\n\n  private renderInput() {\n    return (\n      <tk-input\n        ref={el => (this.inputRef = el as HTMLTkInputElement)}\n        class={classNames('tk-select-input', {\n          'editable-select': this.editable,\n          'tk-table-input': this.el.classList.contains('tk-table-select'),\n          'multiple-select': this.multiple,\n          'allow-custom-value-select': this.allowCustomValue,\n        })}\n        label={this.label}\n        size={this.size}\n        showAsterisk={this.showAsterisk}\n        hint={this.hint}\n        placeholder={this.value?.length > 0 ? '' : this.placeholder}\n        invalid={this.invalid}\n        error={this.error}\n        icon=\"keyboard_arrow_down\"\n        iconPosition=\"right\"\n        mode={this.multiple ? 'chips' : 'text'}\n        chipLabelKey={this.optionLabelKey}\n        readonly={this.readonly}\n        disabled={this.disabled}\n        clearable={this.clearable}\n        chipOptions={this.chipOptions}\n        aria-describedby=\"dropdown\"\n        aria-expanded={!!this.isOpen}\n        onClick={() => this.handleInputClick()}\n        onTk-change={e => {\n          e.stopPropagation();\n          this.handleInputChange(e.detail);\n        }}\n        onTk-blur={() => setTimeout(() => this.handleInputBlur(), 150)}\n        onTk-clear-click={() => this.handleInputClearClick()}\n        onKeyDown={e => this.handleInputKeydown(e)}\n      ></tk-input>\n    );\n  }\n\n  private renderDropdown() {\n    if (!this.isOpen) return null;\n    return (\n      <div class=\"tk-select-panel\" ref={el => (this.panelRef = el as HTMLDivElement)} data-tk-select-id={this.uniqueId}>\n        <div class=\"dropdown-item-holder\">\n          {this.loading ? (\n            <tk-spinner size={this.size}></tk-spinner>\n          ) : this.renderOptions?.length > 0 ? (\n            this.createOptions()\n          ) : this.hasEmptyDataSlot ? (\n            <slot name=\"empty-data\"></slot>\n          ) : (\n            this.emptyMessage\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const rootClasses = classNames('tk-select-container', this.size, { focus: this.hasFocus });\n\n    return (\n      <div aria-readonly={this.readonly} aria-disabled={this.disabled} aria-invalid={this.invalid} class={rootClasses}>\n        {this.renderInput()}\n        {this.renderDropdown()}\n      </div>\n    );\n  }\n}\n"],"version":3}