{"file":"p-r58Qbyxv.js","mappings":";;;;;AAAA,MAAM,WAAW,GAAG,koQAAkoQ;;MCgBzoQ,OAAO,iBAAAA,kBAAA,CAAA,MAAA,OAAA,SAAAC,CAAA,CAAA;AALpB,IAAA,WAAA,GAAA;;;;;AAQE;;;AAGG;AACK,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAEjC;;;AAGG;AACK,QAAA,IAAI,CAAA,IAAA,GAAqD,QAAQ;AAYzE;;;AAGG;AACK,QAAA,IAAS,CAAA,SAAA,GAAY,KAAK;AAElC;;;AAGG;AACK,QAAA,IAAe,CAAA,eAAA,GAAY,IAAI;AAEvC;;;AAGG;AACK,QAAA,IAAI,CAAA,IAAA,GAA+B,MAAM;AAEjD;;;AAGG;AACK,QAAA,IAAO,CAAA,OAAA,GAAiG,SAAS;AAwC1H;IA3BC,iBAAiB,GAAA;AACf,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI;AAAE,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;;IAGzC,WAAW,GAAA;;QACjB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAC9B,IAAI,IAAI,CAAC,eAAe;YAAE,CAAA,EAAA,GAAA,IAAI,CAAC,EAAE,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,MAAM,EAAE;;IAG7C,MAAM,GAAA;AACJ,QAAA,MAAM,WAAW,GAAG,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE;YAC7E,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACxB,SAAA,CAAC;AACF,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,CAAA,CAAA,SAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAa,mBAAmB,CAAC,IAAI,CAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,EAAI;QAC5F,QACE,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAE,WAAW,EAAA,EACpB,IAAI,EACJ,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,SAAS,KACb,0DAAG,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,EAAE,KAAK,EAAC,2BAA2B,EAEnE,EAAA,OAAA,CAAA,CACL,CACG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-chips/tk-chips.scss?tag=tk-chips&encapsulation=shadow","src/components/tk-chips/tk-chips.tsx"],"sourcesContent":[":host {\n  display: inline-flex;\n}\n\n.tk-chips {\n  font-family: 'Geologica', sans-serif;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: var(--chips-large-radius, 6px);\n  border-width: 0px;\n  background-color: var(--static-Light, #fff);\n\n  &.removable {\n    cursor: pointer;\n  }\n\n  &.disabled {\n    color: var(--text-sub-base, #cacfd8) !important;\n    background-color: var(--frames-light) !important;\n\n    &.avatar,\n    &.outlined {\n      border: 1px solid var(--border-sub-base, #cacfd8) !important;\n      background-color: var(--static-Light, #fff) !important;\n    }\n\n    &:active {\n      box-shadow: none !important;\n    }\n  }\n\n  &:active {\n    box-shadow: var(--secondary-focus);\n  }\n\n  &.primary {\n    color: var(--primary-base, #c90019);\n\n    &:active {\n      box-shadow: var(--primary-focus);\n    }\n\n    &.filled {\n      color: var(--text-lightest);\n      background-color: var(--primary-base);\n\n      &:hover {\n        background-color: var(--primary-dark, #b70017);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--primary-base);\n\n      &:hover {\n        background-color: var(--primary-lightest, #fae6e8);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--primary-light, #eeb0b8);\n      color: var(--primary-base);\n    }\n\n    &.avatar {\n      border: 1px solid var(--primary-base, #c90019);\n\n      &:hover {\n        background-color: var(--primary-lightest, #fae6e8);\n      }\n    }\n  }\n\n  &.secondary {\n    color: var(--secondary-darkest);\n\n    &.filled {\n      background-color: var(--secondary-darkest);\n      color: var(--text-lightest);\n\n      &:hover {\n        background-color: var(--secondary-dark, #607083);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--secondary-darkest);\n\n      &:hover {\n        background-color: var(--secondary-lightest, #f2f3f5);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--secondary-light);\n      color: var(--secondary-darkest);\n\n      &:hover {\n        color: var(--secondary-dark);\n        background-color: var(--secondary-light, #dadee3);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--secondary-darkest, #34404f);\n\n      &:hover {\n        background-color: var(--secondary-lightest, #dadee3);\n      }\n    }\n  }\n\n  &.neutral {\n    color: var(--text-darkest);\n\n    &.filled {\n      background-color: var(--background-darkest);\n      color: var(--text-lightest, #f9fafc);\n\n      &:hover {\n        background-color: var(--background-dark, #525866);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--background-darkest);\n\n      &:hover {\n        background-color: var(--background-lightest, #f9fafc);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--icon-lightest);\n\n      &:hover {\n        color: var(--text-dark);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--background-darkest, #222530);\n\n      &:hover {\n        background-color: var(--background-lightest, #f9fafc);\n      }\n    }\n  }\n\n  &.info {\n    color: var(--states-info-dark, #295bac);\n\n    &.filled {\n      color: var(--text-lightest, #f9fafc);\n      background-color: var(--states-info-dark);\n\n      &:hover {\n        background-color: var(--states-info-darkest);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--states-info-dark, #295bac);\n\n      &:hover {\n        background-color: var(--states-info-lightest, #d0e1fd);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--states-info-lightest, #d0e1fd);\n\n      &:hover {\n        color: var(--states-info-darkest, #183462);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--states-info-dark, #295bac);\n\n      &:hover {\n        background-color: var(--states-info-lightest, #d0e1fd);\n      }\n    }\n  }\n\n  &.success {\n    color: var(--states-success-dark, #188a42);\n\n    &.filled {\n      color: var(--text-lightest, #f9fafc);\n      background-color: var(--states-success-dark, #188a42);\n\n      &:hover {\n        background-color: var(--states-success-darkest, #0e4f26);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--states-success-dark, #188a42);\n\n      &:hover {\n        background-color: var(--states-success-lightest, #caf1d8);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--states-success-lightest, #caf1d8);\n\n      &:hover {\n        color: var(--states-success-darkest, #0e4f26);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--states-success-dark, #188a42);\n\n      &:hover {\n        background-color: var(--states-success-lightest, #caf1d8);\n      }\n    }\n  }\n\n  &.danger {\n    color: var(--states-danger-dark, #b32b23);\n\n    &.filled {\n      color: var(--text-lightest, #f9fafc);\n      background-color: var(--states-danger-dark, #b32b23);\n\n      &:hover {\n        background-color: var(--states-danger-darkest, #661814);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--states-danger-dark, #b32b23);\n\n      &:hover {\n        background-color: var(--states-danger-lightest, #ffd0ce);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--states-danger-lightest, #ffd0ce);\n\n      &:hover {\n        color: var(--states-danger-darkest, #661814);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--states-danger-dark, #b32b23);\n\n      &:hover {\n        background-color: var(--states-danger-lightest, #ffd0ce);\n      }\n    }\n  }\n\n  &.warning {\n    color: var(--states-warning-dark, #c79807);\n\n    &.filled {\n      background-color: var(--states-warning-dark, #c79807);\n      color: var(--text-lightest, #f9fafc);\n\n      &:hover {\n        background-color: var(--states-warning-lightest, #f6de95);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--states-warning-dark, #c79807);\n\n      &:hover {\n        background-color: var(--states-warning-lightest, #f6de95);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--states-warning-lightest, #f6de95);\n\n      &:hover {\n        color: var(--states-warning-darkest, #816204);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--states-warning-dark, #c79807);\n\n      &:hover {\n        background-color: var(--states-warning-lightest, #f6de95);\n      }\n    }\n  }\n\n  &.verified {\n    color: var(--states-verified-dark, #609af8);\n\n    &.filled {\n      color: var(--text-lightest, #f9fafc);\n      background-color: var(--states-verified-dark, #609af8);\n\n      &:hover {\n        background-color: var(--states-verified-darkest, #3b82f6);\n      }\n    }\n\n    &.outlined {\n      border: 1px solid var(--states-verified-dark, #609af8);\n\n      &:hover {\n        background-color: var(--states-verified-lightest, #d0e1fd);\n      }\n    }\n\n    &.filledlight {\n      background-color: var(--states-verified-lightest, #d0e1fd);\n\n      &:hover {\n        color: var(--states-verified-darkest, #3b82f6);\n      }\n    }\n\n    &.avatar {\n      border: 1px solid var(--states-verified-dark, #609af8);\n\n      &:hover {\n        background-color: var(--states-verified-lightest, #d0e1fd);\n      }\n    }\n  }\n\n  &.small {\n    padding: calc(var(--chips-small-v-padding, 1px) - 1px) var(--chips-small-h-padding, 4px);\n    font-size: var(--desktop-body-xs-size, 12px);\n    font-style: normal;\n    font-weight: 400;\n    line-height: var(--desktop-body-xs-line-height, 18px);\n    gap: 2px;\n\n    i {\n      font-size: 14px;\n    }\n  }\n\n  &.base {\n    padding: calc(var(--chips-base-v-padding - 1, 2px) - 1px) var(--chips-base-h-padding, 6px);\n    font-size: var(--desktop-body-s-size, 14px);\n    font-style: normal;\n    font-weight: 400;\n    line-height: var(--desktop-body-s-line-height, 20px);\n    gap: 4px;\n\n    i {\n      font-size: 16px;\n    }\n  }\n\n  &.large {\n    padding: calc(var(--chips-large-v-padding, 4px) - 2px) var(--chips-large-h-padding, 8px);\n    font-size: var(--desktop-body-s-size, 14px);\n    font-style: normal;\n    font-weight: 400;\n    line-height: var(--desktop-body-s-line-height, 20px);\n    gap: 6px;\n\n    i {\n      font-size: 20px;\n    }\n  }\n}\n","import { Component, h, Prop, Element, Event, ComponentInterface, EventEmitter } from '@stencil/core';\nimport classNames from 'classnames';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * The TkChip component is basically a simple UI block entity, representing for example more advanced underlying data, such as a contact, in a compact way. Chips can contain entities such as an avatar, text or an icon, optionally having a pointer too.\n * @react `import { TkChips } from '@takeoff-ui/react'`\n * @vue `import { TkChips } from '@takeoff-ui/vue'`\n * @angular `import { TkChips } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-chips',\n  styleUrl: 'tk-chips.scss',\n  shadow: true,\n})\nexport class TkChips implements ComponentInterface {\n  @Element() el: HTMLTkChipsElement;\n\n  /**\n   * The disabled status.\n   * @defaultValue false\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * This field specifies the design type of the component.\n   * @defaultValue filled\n   */\n  @Prop() type: 'filled' | 'filledlight' | 'outlined' | 'avatar' = 'filled';\n\n  /**\n   * Specifies a material icon name to be displayed.\n   */\n  @Prop() icon?: string | IIconOptions;\n\n  /**\n   * The label to display inside the chip.\n   */\n  @Prop() label: string;\n\n  /**\n   * This property determines whether the chip component is removable.\n   * @defaultValue false\n   */\n  @Prop() removable: boolean = false;\n\n  /**\n   * Determines whether the chip automatically removes itself when the close button is clicked.\n   * @defaultValue true\n   */\n  @Prop() autoSelfDestroy: boolean = true;\n\n  /**\n   * Sets size for the component.\n   * @defaultValue 'base'\n   */\n  @Prop() size: 'large' | 'base' | 'small' = 'base';\n\n  /**\n   * The variant of the chip for styling.\n   * @defaultValue 'primary'\n   */\n  @Prop() variant: 'primary' | 'secondary' | 'neutral' | 'info' | 'success' | 'danger' | 'warning' | 'verified' = 'primary';\n\n  /**\n   * The value of the chips\n   * @defaultValue this.label\n   */\n  @Prop() value: any;\n\n  /**\n   * When an element is deleted, it is triggered. It returns the label.\n   */\n  @Event({ eventName: 'tk-remove' }) tkRemove: EventEmitter<any>;\n\n  componentWillLoad(): void {\n    if (this.value == null) this.value = this.label;\n  }\n\n  private handleClick() {\n    this.tkRemove.emit(this.value);\n    if (this.autoSelfDestroy) this.el?.remove();\n  }\n\n  render() {\n    const rootClasses = classNames('tk-chips', this.variant, this.size, this.type, {\n      removable: this.removable,\n      disabled: this.disabled,\n    });\n    const icon = this.icon && <tk-icon {...getIconElementProps(this.icon, { variant: null })} />;\n    return (\n      <div class={rootClasses}>\n        {icon}\n        {this.label}\n        {this.removable && (\n          <i onClick={() => this.handleClick()} class=\"material-symbols-outlined\">\n            close\n          </i>\n        )}\n      </div>\n    );\n  }\n}\n"],"version":3}