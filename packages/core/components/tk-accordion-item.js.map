{"file":"tk-accordion-item.js","mappings":"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","names":["TkAccordionItem","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-accordion/tk-accordion-item.scss?tag=tk-accordion-item&encapsulation=shadow","src/components/tk-accordion/tk-accordion-item.tsx"],"sourcesContent":[".tk-accordion-item {\n  margin: 10px auto;\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    cursor: pointer;\n    color: var(--text-darkest);\n\n    .tk-accordion-item-icon-collapse {\n      color: var(--primary-base);\n    }\n  }\n\n  .title {\n    flex-grow: 1;\n  }\n\n  .icon {\n    transition: transform 0.3s;\n    margin-bottom: -5px;\n  }\n\n  &.grouped {\n    gap: 10px;\n    border-radius: var(--accordion-base-radius);\n    border: 1px solid var(--border-light);\n    background: var(--static-light);\n\n    .header {\n      border-radius: var(--accordion-base-radius);\n\n      &:hover {\n        background: var(--background-lightest);\n      }\n    }\n\n    &.open .header {\n      border-radius: var(--accordion-base-radius) var(--accordion-base-radius) 0 0;\n    }\n\n    .content {\n      color: var(--text-dark);\n      max-height: 0;\n      transition:\n        max-height 0.2s ease-out,\n        opacity 0.2s ease-out;\n      opacity: 0;\n      padding-top: 5px;\n      display: none;\n\n      &.open {\n        max-height: 100%;\n        opacity: 1;\n        display: block;\n      }\n    }\n\n    &.base {\n      .header {\n        font-size: 14px;\n        font-weight: 400;\n        line-height: var(--desktop-body-s-line-height);\n        gap: var(--accordion-base-gap);\n        padding: var(--accordion-base-v-padding) var(--accordion-base-h-padding);\n      }\n\n      .content {\n        padding: 0 var(--accordion-base-v-padding) var(--accordion-base-h-padding);\n      }\n    }\n\n    &.large {\n      .header {\n        font-size: 16px;\n        font-weight: 400;\n        line-height: var(--desktop-body-m-base-line-height);\n        padding: var(--accordion-large-v-padding) var(--accordion-large-h-padding);\n        gap: var(--accordion-large-gap);\n      }\n\n      .content {\n        padding: 0 var(--accordion-large-v-padding) var(--accordion-large-h-padding);\n      }\n    }\n  }\n\n  &.divided {\n    .header {\n      gap: 10px;\n      border-radius: var(--accordion-base-radius);\n      border: 1px solid var(--border-light);\n      background: var(--static-light);\n\n      &:hover {\n        background: var(--background-lightest);\n      }\n    }\n\n    .content {\n      color: var(--text-dark);\n      border-radius: var(--accordion-base-radius);\n      border: 1px solid var(--border-light);\n      background: var(--background-lightest);\n      max-height: 0;\n      transition:\n        max-height 0.2s ease-out,\n        opacity 0.2s ease-out;\n      opacity: 0;\n      display: none;\n\n      &.open {\n        margin-top: 6px;\n        max-height: 100%;\n        opacity: 1;\n        display: block;\n      }\n    }\n\n    &.base {\n      .header {\n        padding: var(--accordion-base-v-padding) var(--accordion-base-h-padding);\n        gap: var(--accordion-base-gap);\n        font-size: 14px;\n        font-weight: 400;\n        line-height: var(--desktop-body-s-line-height);\n      }\n\n      .content {\n        padding: var(--accordion-base-v-padding) var(--accordion-base-h-padding);\n        font-size: var(--desktop-body-xs-size);\n        font-style: normal;\n        font-weight: 300;\n        line-height: var(--desktop-body-xs-line-height);\n      }\n    }\n\n    &.large {\n      padding: var(--accordion-large-v-padding) var(--accordion-large-h-padding);\n      gap: var(--accordion-large-gap);\n\n      .header {\n        font-size: 16px;\n        font-weight: 400;\n        line-height: var(--desktop-body-m-large-line-height);\n      }\n\n      .content {\n        padding: var(--accordion-large-v-padding) var(--accordion-large-h-padding);\n        font-size: var(--desktop-body-s-size);\n        font-style: normal;\n        font-weight: 300;\n        line-height: var(--desktop-body-s-line-height);\n      }\n    }\n  }\n}\n","import { Component, ComponentInterface, Prop, h, Element, State, Host } from '@stencil/core';\nimport classNames from 'classnames';\nimport { IIconOptions } from '../../global/interfaces/IIconOptions';\nimport { getIconElementProps } from '../../utils/icon-props';\n\n/**\n * @slot header - Custom header template that overrides the header prop if provided.\n * @slot content - Custom content template.\n */\n@Component({\n  tag: 'tk-accordion-item',\n  styleUrl: 'tk-accordion-item.scss',\n  shadow: true,\n})\nexport class TkAccordionItem implements ComponentInterface {\n  private parentEl!: HTMLTkAccordionElement;\n\n  @Element() el: HTMLTkAccordionItemElement;\n\n  @State() type: 'grouped' | 'divided' = 'grouped';\n  @State() arrowPosition: 'left' | 'right' = 'right';\n  @State() expandIcon: string | IIconOptions;\n  @State() collapseIcon: string | IIconOptions;\n  @State() hideArrows: boolean = false;\n  @State() hasHeaderSlot = false;\n\n  /**\n   * Sets if the accordion is active.\n   * @defaultValue false\n   */\n  @Prop() active: boolean = false;\n\n  /**\n   * Optional key for the accordion item.\n   */\n  @Prop({ attribute: 'item-key', reflect: true }) itemKey?: string;\n\n  /**\n   * Header text to display.\n   */\n  @Prop() header?: string;\n\n  /**\n   * Toggle's the accordion item.\n   */\n  @Prop() toggleItem: () => void;\n\n  /**\n   * Sets size for the component.\n   * @defaultValue 'base'\n   */\n  @Prop() size: 'base' | 'large' = 'base';\n\n  /**\n   * Icon for accordion component.\n   */\n  @Prop() icon?: string | IIconOptions;\n\n  componentWillLoad(): void {\n    this.parentEl = this.el.closest('tk-accordion');\n\n    if (this.parentEl) {\n      this.type = this.parentEl.type as 'grouped' | 'divided';\n      this.arrowPosition = this.parentEl.arrowPosition as 'left' | 'right';\n      this.expandIcon = this.parentEl.expandIcon;\n      this.collapseIcon = this.parentEl.collapseIcon;\n      this.hideArrows = this.parentEl.hideArrows;\n    }\n    this.hasHeaderSlot = !!this.el.querySelector(':scope > [slot=\"header\"]');\n  }\n\n  private createIcon() {\n    if (this.hideArrows) return null;\n    let _renderIcon: string | IIconOptions;\n\n    if (this.active) {\n      _renderIcon = this.collapseIcon;\n    } else {\n      _renderIcon = this.expandIcon;\n    }\n\n    const icon = (\n      <tk-icon\n        {...getIconElementProps(_renderIcon, { class: classNames({ 'tk-accordion-item-icon-collapse': this.active }), variant: null, size: 'large' }, 'outlined', 'span')}\n      ></tk-icon>\n    );\n\n    return <span class=\"icon\">{icon}</span>;\n  }\n\n  private createHeader() {\n    if (this.hasHeaderSlot) {\n      return <slot name=\"header\" />;\n    }\n    return this.header || '';\n  }\n\n  render() {\n    const rootClasses = classNames('tk-accordion-item', this.size, this.type, {\n      open: this.active,\n    });\n\n    const icon = <tk-icon {...getIconElementProps(this.icon, { variant: 'neutral', sign: true })}></tk-icon>;\n\n    return (\n      <Host>\n        <div class={rootClasses}>\n          <div class=\"header\" onClick={this.toggleItem}>\n            {this.arrowPosition === 'left' && this.createIcon()}\n            {icon}\n            <span class=\"title\">{this.createHeader()}</span>\n            {this.arrowPosition === 'right' && this.createIcon()}\n          </div>\n          <div class={`content ${this.active ? 'open' : ''}`}>\n            <slot name=\"content\" />\n          </div>\n        </div>\n      </Host>\n    );\n  }\n}\n"],"version":3}