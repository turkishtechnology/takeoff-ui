{"file":"tk-radio-group.js","mappings":"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","names":["TkRadioGroup","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-radio/tk-radio-group/tk-radio-group.scss?tag=tk-radio-group","src/components/tk-radio/tk-radio-group/tk-radio-group.tsx"],"sourcesContent":["tk-radio-group {\n  display: block;\n}\n\n.tk-radio-group-container {\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  gap: 4px;\n\n  label {\n    font-size: var(--size-sm);\n    font-weight: 400;\n    color: var(--text-darkest);\n    line-height: var(--desktop-body-s-line-height);\n    padding: var(--input-external-label-base-label-v-padding) var(--input-external-label-base-label-h-padding);\n\n    .asterisk {\n      color: var(--states-danger-base);\n      font-size: var(--desktop-label-s-size);\n      font-weight: 300;\n      line-height: var(--desktop-label-s-line-height);\n    }\n  }\n\n  .tk-radio-holder {\n    display: flex;\n    flex-direction: row;\n    gap: 8px;\n\n    &.spread {\n      width: 100%;\n\n      tk-radio {\n        flex: 1;\n      }\n    }\n\n    &.card {\n      tk-radio {\n        border-radius: var(--radius-m-base);\n        border: 1px solid var(--border-light);\n\n        &:hover {\n          background-color: var(--background-lightest);\n        }\n\n        .tk-radio-container {\n          padding: var(--card-radio-container-v-padding) var(--card-radio-container-h-padding);\n        }\n      }\n    }\n  }\n\n  &.vertical {\n    .tk-radio-holder {\n      flex-direction: column;\n    }\n  }\n}\n","import { Component, ComponentInterface, Element, Prop, State, Watch, Event, EventEmitter, h, AttachInternals } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'tk-radio-group',\n  styleUrl: 'tk-radio-group.scss',\n  formAssociated: true,\n})\nexport class TkRadioGroup implements ComponentInterface {\n  @Element() el: HTMLTkRadioGroupElement;\n\n  @State() slottedItems: NodeListOf<HTMLTkRadioElement>;\n\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Defines the label for the element.\n   */\n  @Prop() label: string;\n\n  /**\n   * The direction of the radio buttons.\n   */\n  @Prop() direction: 'vertical' | 'horizontal' = 'horizontal';\n\n  /**\n   * Indicates whether the input is in an invalid state\n   * @defaultValue false\n   */\n  @Prop() invalid: boolean = false;\n\n  @Watch('invalid')\n  protected invalidChanged() {\n    if (this.slottedItems?.length > 0) {\n      this.slottedItems.forEach(item => {\n        item.invalid = this.invalid;\n      });\n    }\n  }\n  /**\n   * Determines the position of the radio group and label.\n   */\n  @Prop() position: 'left' | 'right' = 'left';\n\n  /**\n   * The value of the input.\n   */\n  @Prop({ mutable: true }) value?: any;\n\n  /**\n   * Watches for changes in the selected value and emits a custom event when the value changes.\n   */\n  @Watch('value')\n  protected valueChanged() {\n    this.updateTkRadio();\n  }\n\n  /**\n   * Displays a red asterisk (*) next to the label for visual emphasis.\n   */\n  @Prop() showAsterisk: boolean = false;\n\n  /**\n   * Determines whether the radios will spread evenly across the horizontal space.\n   */\n  @Prop() spread: boolean = false;\n\n  /**\n   * Determines the appearance types of radios.\n   */\n  @Prop() type: 'default' | 'card' = 'default';\n\n  /**\n   * Emitted when the value has changed.\n   */\n  @Event({ eventName: 'tk-change' }) tkChange!: EventEmitter<any>;\n\n  componentWillLoad() {\n    this.slottedItems = this.el.querySelectorAll('tk-radio');\n    if (this.slottedItems.length > 0) {\n      this.slottedItems.forEach(item => {\n        item.addEventListener('tk-change', e => {\n          e.stopPropagation();\n          this.handleChange(e);\n        });\n        item.checked = this.value == item.value;\n        item.invalid = this.invalid;\n      });\n    }\n  }\n\n  formResetCallback() {\n    this.handleFormReset();\n  }\n\n  private updateTkRadio() {\n    if (this.slottedItems.length > 0) {\n      this.slottedItems.forEach(item => {\n        item.checked = this.value == item.value;\n      });\n    }\n  }\n\n  private handleFormReset() {\n    this.value = null;\n    this.tkChange.emit(this.value);\n    this.updateTkRadio();\n  }\n\n  private handleChange(e) {\n    this.value = e.detail;\n    this.tkChange.emit(this.value);\n    this.updateTkRadio();\n  }\n\n  render() {\n    let _label: HTMLLabelElement;\n\n    const rootClasses = classNames('tk-radio-group-container', {\n      vertical: this.direction === 'vertical',\n    });\n\n    if (this.label?.length > 0) {\n      const asterisk = <span class=\"asterisk\">*</span>;\n      _label = (\n        <label class=\"label\">\n          {this.label}\n          {this.showAsterisk && asterisk}\n        </label>\n      );\n    }\n\n    return (\n      <div class={rootClasses}>\n        {_label}\n        <div class={classNames('tk-radio-holder', this.type, { spread: this.spread })}>{this.slottedItems.length > 0 ? <slot /> : ''}</div>\n      </div>\n    );\n  }\n}\n"],"version":3}