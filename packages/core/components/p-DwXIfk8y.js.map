{"file":"p-DwXIfk8y.js","mappings":"AAEA;;;;;;;;AAQG;AACU,MAAA,mBAAmB,GAAG,CACjC,IAA8C,EAC9C,KAAA,GAA6B,EAAE,EAC/B,YAA8C,UAAU,EACxD,OAAwB,GAAA,GAAG,KACG;AAC9B,IAAA,IAAI,CAAC,IAAI;AAAE,QAAA,OAAO,IAAI;IAEtB,IAAI,WAAW,GACb,MAAA,CAAA,MAAA,CAAA,EAAA,QAAQ,EAAE,SAAS,EACnB,OAAO,EAAA,EACJ,KAAK,CACT;AAED,IAAA,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;AAC5B,QAAA,WAAW,CAAC,IAAI,GAAG,IAAI;;SAClB;QACL,WAAW,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACN,IAAI,CAAA,EACJ,WAAW,CAAA,EAAA,EACd,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,QAAQ,EAAE,KAAK,CAAC,QAAQ,IAAI,IAAI,CAAC,KAAK,IAAI,SAAS,EACnD,KAAK,EAAE,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAChC,IAAI,EAAE,KAAK,CAAC,IAAI,KAAK,SAAS,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAA,CACxD;AAEM,QAAA,WAAW,aAAX,WAAW,KAAA,MAAA,GAAA,IAAA,GAAA,OAAX,WAAW,CAAE,KAAK;AAClB,QAAA,WAAW,aAAX,WAAW,KAAA,MAAA,GAAA,IAAA,GAAA,OAAX,WAAW,CAAE,IAAI;;AAG1B,IAAA,OAAO,WAAW;AACpB;;;;","names":[],"sources":["src/utils/icon-props.ts"],"sourcesContent":["import { IIconOptions } from '../global/interfaces/IIconOptions';\n\n/**\n * Generates the properties object for a tk-icon element based on Material Symbols.\n *\n * @param icon - The icon definition, either a string (icon name) or an IIconOptions object.\n * @param props - Additional base properties to merge.\n * @param iconStyle - The style for the icon ('outlined', 'rounded', 'sharp').\n * @param iconTag - The tag for the icon ('i' or 'span'). Defaults to 'i'.\n * @returns The properties object for the tk-icon element, or null if no icon is provided.\n */\nexport const getIconElementProps = (\n  icon: string | IIconOptions | undefined | null,\n  props: Record<string, any> = {},\n  iconStyle: 'outlined' | 'rounded' | 'sharp' = 'outlined',\n  iconTag: 'i' | 'span' = 'i',\n): Record<string, any> | null => {\n  if (!icon) return null;\n\n  let mergedProps: Record<string, any> = {\n    iconType: iconStyle,\n    iconTag,\n    ...props,\n  };\n\n  if (typeof icon === 'string') {\n    mergedProps.icon = icon;\n  } else {\n    mergedProps = {\n      ...icon,\n      ...mergedProps,\n      icon: icon.name,\n      iconType: props.iconType || icon.style || iconStyle,\n      color: props.color || icon.color,\n      fill: props.fill !== undefined ? props.fill : icon.fill,\n    };\n\n    delete mergedProps?.style;\n    delete mergedProps?.name;\n  }\n\n  return mergedProps;\n};\n"],"version":3}