{"file":"p-DOZWa_LM.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement","uuidv4"],"sources":["src/components/tk-checkbox/tk-checkbox.scss?tag=tk-checkbox","src/components/tk-checkbox/tk-checkbox.tsx"],"sourcesContent":["tk-checkbox {\n  display: inline-block;\n}\n\n.tk-checkbox-container {\n  &.card {\n    border-radius: var(--radius-m-base);\n    border: 1px solid var(--border-light);\n    background: var(--static-Light);\n    gap: var(--card-radio-container-gap);\n    padding: var(--card-radio-container-v-padding) var(--card-radio-container-h-padding);\n\n    &:hover {\n      background-color: var(--background-lightest);\n    }\n    .mask {\n      align-self: center;\n    }\n  }\n  label {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    gap: var(--spacing-s);\n    color: var(--text-darkest);\n    font-size: var(--size-sm);\n    cursor: pointer;\n    user-select: none;\n\n    input[type='checkbox'] {\n      margin: 0;\n      appearance: none;\n      outline: none;\n      display: none;\n    }\n\n    .mask {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 20px;\n      height: 20px;\n      background-color: var(--static-light);\n      border: 2px solid var(--border-light);\n      border-radius: var(--radius-s);\n      box-sizing: border-box;\n      -moz-box-sizing: border-box;\n      -webkit-box-sizing: border-box;\n      padding: 2px;\n\n      i {\n        visibility: hidden;\n        font-size: 12px;\n        color: var(--static-light);\n        border-radius: var(--radius-xs);\n        background-color: var(--states-info-base);\n      }\n    }\n    .tk-checkbox-text-holder {\n      .tk-checkbox-description {\n        color: var(--text-base);\n        font-size: var(--size-xs);\n        font-weight: var(--weight-regular);\n      }\n    }\n  }\n\n  &:hover {\n    label {\n      .mask {\n        background-color: var(--background-lightest);\n      }\n    }\n  }\n\n  label input:focus-visible + .mask {\n    border-color: var(--states-info-base);\n    background-color: var(--static-light);\n  }\n\n  label input:checked + .mask,\n  label input:indeterminate + .mask {\n    border-color: var(--states-info-light);\n    background-color: var(--static-light);\n\n    i {\n      visibility: visible;\n    }\n  }\n\n  label:hover input:checked + .mask,\n  label:hover input:indeterminate + .mask {\n    border-color: var(--states-info-sub-base);\n    background-color: var(--states-info-light);\n  }\n\n  &[aria-disabled],\n  &[disabled] {\n    label {\n      color: var(--text-sub-base);\n\n      input + .mask {\n        border: 2px solid var(--border-light);\n        background-color: var(--background-light);\n\n        i {\n          background-color: var(--background-sub-base);\n        }\n      }\n    }\n  }\n\n  &[aria-invalid] {\n    label {\n      .mask {\n        border: 2px solid var(--states-danger-base);\n        background: var(--static-light);\n      }\n\n      input:checked + .mask,\n      input:indeterminate + .mask {\n        border-color: var(--states-danger-light);\n\n        i {\n          background-color: var(--states-danger-base);\n        }\n      }\n\n      &:hover {\n        input:checked + .mask,\n        input:indeterminate + .mask {\n          border-color: var(--states-danger-sub-base);\n          background-color: var(--states-danger-light);\n        }\n      }\n    }\n  }\n}\n","import { Component, Prop, State, h, Element, Watch, EventEmitter, Event, ComponentInterface, AttachInternals } from '@stencil/core';\nimport classNames from 'classnames';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * The TkCheckbox component is another basic element for user input. You can use this to supply a way for the user to toggle an option.\n * @slot content - Custom content template.\n * @react `import { TkCheckbox } from '@takeoff-ui/react'`\n * @vue `import { TkCheckbox } from '@takeoff-ui/vue'`\n * @angular `import { TkCheckbox } from '@takeoff-ui/angular'`\n */\n@Component({\n  tag: 'tk-checkbox',\n  styleUrl: 'tk-checkbox.scss',\n  formAssociated: true,\n})\nexport class TkCheckbox implements ComponentInterface {\n  private inputElement: HTMLInputElement;\n  private uniqueId = uuidv4();\n\n  @Element() el: HTMLTkCheckboxElement;\n\n  @AttachInternals() internals: ElementInternals;\n\n  /**\n   * Controls if checkbox has custom content.\n   * @defaultValue false\n   */\n  @State() hasContentSlot: boolean = false;\n\n  /**\n   * If true, the user cannot interact with the checkbox.\n   */\n  @Prop() disabled: boolean = false;\n\n  /**\n   * The description sub text displayed.\n   */\n  @Prop() description: string;\n\n  /**\n   * Indicates whether the input is in an invalid state\n   * @defaultValue false\n   */\n  @Prop() invalid: boolean = false;\n\n  /**\n   * Defines the label for the checkbox.\n   */\n  @Prop() label: string;\n\n  /**\n   * Name of the checkbox\n   */\n  @Prop() name: string;\n\n  /**\n   * Determines the appearance types of the checkbox.\n   */\n  @Prop() type: 'default' | 'card' = 'default';\n\n  /**\n   * If true, the checkbox will be indeterminate.\n   */\n  @Prop({ mutable: true }) indeterminate: boolean = false;\n  @Watch('indeterminate')\n  indeterminateChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      this.inputElement.indeterminate = newValue; // update the checkbox's indeterminate property\n      if (newValue) this.value = null;\n    }\n  }\n\n  /**\n   * Sets the checkbox value\n   */\n  @Prop({ mutable: true }) value: boolean = false;\n  @Watch('value')\n  valueChanged(newValue: boolean, oldValue: boolean) {\n    if (newValue !== oldValue) {\n      if (newValue !== null) {\n        this.indeterminate = false;\n      }\n    }\n  }\n\n  /**\n   * Emitted when the checkbox checked state changes.\n   */\n  @Event({ eventName: 'tk-change' }) tkChange: EventEmitter<boolean>;\n\n  componentWillLoad() {\n    if (this.indeterminate) this.value = null;\n    this.hasContentSlot = !!this.el.querySelector('[slot=\"content\"]');\n  }\n\n  formResetCallback() {\n    this.handleFormReset();\n  }\n\n  private handleFormReset() {\n    this.value = false;\n    this.indeterminate = false;\n    this.inputElement.checked = false;\n    this.tkChange.emit(this.value);\n  }\n\n  private handleChange() {\n    if (!this.disabled) {\n      if (this.inputElement.indeterminate) {\n        this.value = null;\n        this.indeterminate = false;\n      } else {\n        this.value = this.inputElement.checked;\n      }\n      this.tkChange.emit(this.value);\n    }\n  }\n\n  private renderInput(): HTMLInputElement {\n    return (\n      <input\n        id={this.uniqueId}\n        type=\"checkbox\"\n        ref={el => (this.inputElement = el)}\n        checked={this.value}\n        indeterminate={this.indeterminate}\n        disabled={this.disabled}\n        onChange={this.handleChange.bind(this)}\n        name={this.name}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div class={classNames('tk-checkbox-container', this.type)} aria-disabled={this.disabled} aria-invalid={this.invalid}>\n        <label htmlFor={this.uniqueId}>\n          {this.renderInput()}\n          <div class=\"mask\">\n            <i class=\"material-symbols-outlined\">{this.indeterminate ? 'remove' : 'check'}</i>\n          </div>\n          {this.hasContentSlot ? (\n            <slot name=\"content\" />\n          ) : (\n            <div class=\"tk-checkbox-text-holder\">\n              <div class=\"tk-checkbox-label\">{this.label}</div>\n              <div class=\"tk-checkbox-description\">{this.description}</div>\n            </div>\n          )}\n        </label>\n      </div>\n    );\n  }\n}\n"],"version":3}