{"file":"tk-avatar-group.js","mappings":";;;AAAA,MAAM,iBAAiB,GAAG,gkCAAgkC;;MCO7kCA,eAAa,iBAAAC,kBAAA,CAAA,MAAA,aAAA,SAAAC,CAAA,CAAA;AAJ1B,IAAA,WAAA,GAAA;;;AAOE;;;AAGG;AACK,QAAA,IAAO,CAAA,OAAA,GAAa,KAAK;AASlC;IAPC,MAAM,GAAA;AACJ,QAAA,QACE,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAE,UAAU,CAAC,iBAAiB,EAAE,EAAE,yBAAyB,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,EAAA,EACpF,CAAa,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["TkAvatarGroup","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/tk-avatar/tk-avatar-group.scss?tag=tk-avatar-group","src/components/tk-avatar/tk-avatar-group.tsx"],"sourcesContent":[":host {\n  display: block;\n}\n\n.tk-avatar-group {\n  display: inline-flex;\n  align-items: center;\n  width: max-content;\n  overflow: hidden;\n\n  &.tk-avatar-group-compact {\n    border-radius: var(--radius-full);\n    border: 1px solid var(--border-light, #e1e4ea);\n    background: var(--static-light, #fff);\n    padding: 4px;\n\n    > tk-avatar:last-child .tk-avatar-container {\n      margin-left: 0;\n\n      .tk-avatar {\n        background: transparent;\n        border: 1px solid transparent;\n        box-shadow: none;\n        user-select: none;\n\n        .tk-avatar-label {\n          color: var(--text-darkest, #222530);\n        }\n      }\n    }\n  }\n\n  > tk-avatar:not(:last-child) .tk-avatar {\n    box-shadow: var(--effect-1-default-base);\n  }\n\n  > tk-avatar + tk-avatar {\n    > .tk-avatar-xlarge,\n    > .tk-avatar-large {\n      margin-left: -20px;\n    }\n\n    > .tk-avatar-base {\n      margin-left: var(--neutral-darker-shadows-2xl-spread, -12px);\n    }\n\n    > .tk-avatar-small,\n    > .tk-avatar-xsmall {\n      margin-left: -8px;\n    }\n  }\n}\n","import { Component, ComponentInterface, Element, Prop, h } from '@stencil/core';\nimport classNames from 'classnames';\n\n@Component({\n  tag: 'tk-avatar-group',\n  styleUrl: 'tk-avatar-group.scss',\n})\nexport class TkAvatarGroup implements ComponentInterface {\n  @Element() el: HTMLTkAvatarGroupElement;\n\n  /**\n   * Whether the avatars should have a shared background\n   * @defaultValue false\n   */\n  @Prop() compact?: boolean = false;\n\n  render() {\n    return (\n      <div class={classNames('tk-avatar-group', { 'tk-avatar-group-compact': this.compact })}>\n        <slot></slot>\n      </div>\n    );\n  }\n}\n"],"version":3}